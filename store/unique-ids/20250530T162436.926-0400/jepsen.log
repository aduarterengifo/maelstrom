2025-05-30 16:24:36,953{GMT}	INFO	[jepsen test runner] jepsen.core: Test version 0e5019a1861d5fae32c5000f15976477045df591 (plus uncommitted changes)
2025-05-30 16:24:36,953{GMT}	INFO	[jepsen test runner] jepsen.core: Command line:
lein run test -w unique-ids --bin self/server/_build/default/bin/main.exe --time-limit 5
2025-05-30 16:24:36,980{GMT}	INFO	[jepsen test runner] jepsen.core: Running test:
{:args []
 :remote
 #jepsen.control.retry.Remote{:remote #jepsen.control.scp.Remote{:cmd-remote #jepsen.control.sshj.SSHJRemote{:concurrency-limit 6,
                                                                                                             :conn-spec nil,
                                                                                                             :client nil,
                                                                                                             :semaphore nil},
                                                                 :conn-spec nil},
                              :conn nil}
 :log-net-send false
 :node-count nil
 :availability nil
 :max-txn-length 4
 :concurrency 5
 :db
 #object[maelstrom.db$db$reify__16612
         "0x21ad0060"
         "maelstrom.db$db$reify__16612@21ad0060"]
 :max-writes-per-key 16
 :leave-db-running? false
 :name "unique-ids"
 :logging-json? false
 :start-time
 #object[org.joda.time.DateTime "0x15a8b228" "2025-05-30T16:24:36.926-04:00"]
 :nemesis-interval 10
 :net
 #object[maelstrom.net$jepsen_net$reify__15721
         "0x5a69f1ef"
         "maelstrom.net$jepsen_net$reify__15721@5a69f1ef"]
 :client
 #object[maelstrom.workload.unique_ids$client$reify__21401
         "0x54fd5f6"
         "maelstrom.workload.unique_ids$client$reify__21401@54fd5f6"]
 :barrier
 #object[java.util.concurrent.CyclicBarrier
         "0x219aab91"
         "java.util.concurrent.CyclicBarrier@219aab91"]
 :log-stderr false
 :pure-generators true
 :ssh {:dummy? true}
 :rate 5
 :checker
 #object[jepsen.checker$compose$reify__11089
         "0x71737478"
         "jepsen.checker$compose$reify__11089@71737478"]
 :argv
 ("test"
  "-w"
  "unique-ids"
  "--bin"
  "self/server/_build/default/bin/main.exe"
  "--time-limit"
  "5")
 :nemesis
 (jepsen.nemesis.ReflCompose
  {:fm {:start-partition 0,
        :stop-partition 0,
        :kill 1,
        :start 1,
        :pause 1,
        :resume 1},
   :nemeses [#unprintable "jepsen.nemesis.combined$partition_nemesis$reify__16905@64001530"
             #unprintable "jepsen.nemesis.combined$db_nemesis$reify__16886@1f9b8c23"]})
 :nodes ["n1" "n2" "n3" "n4" "n5"]
 :test-count 1
 :latency {:mean 0, :dist :constant}
 :bin "self/server/_build/default/bin/main.exe"
 :generator
 #object[jepsen.util.Forgettable
         "0x178826db"
         (jepsen.generator.TimeLimit
          {:limit 5000000000,
           :cutoff nil,
           :gen (jepsen.generator.Any
                 {:gens [(jepsen.generator.OnThreads
                          {:f #{:nemesis},
                           :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__12077
                                                   "0xbec2d81"
                                                   "jepsen.generator.context$make_thread_filter$lazy_filter__12077@bec2d81"],
                           :gen nil})
                         (jepsen.generator.OnThreads
                          {:f #jepsen.generator.context.AllBut{:element :nemesis},
                           :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__12077
                                                   "0x5f04449a"
                                                   "jepsen.generator.context$make_thread_filter$lazy_filter__12077@5f04449a"],
                           :gen (jepsen.generator.Stagger
                                 {:dt 400000000,
                                  :next-time nil,
                                  :gen (jepsen.generator.Repeat
                                        {:remaining -1, :gen {:f :generate}})})})]})})]
 :log-net-recv false
 :os
 #object[maelstrom.net$jepsen_os$reify__15724
         "0x5634c26c"
         "maelstrom.net$jepsen_os$reify__15724@5634c26c"]
 :time-limit 5
 :workload :unique-ids
 :consistency-models [:strict-serializable]
 :topology :grid}

2025-05-30 16:24:38,076{GMT}	INFO	[jepsen node n1] maelstrom.net: Starting Maelstrom network
2025-05-30 16:24:38,077{GMT}	INFO	[jepsen test runner] jepsen.db: Tearing down DB
2025-05-30 16:24:38,078{GMT}	INFO	[jepsen test runner] jepsen.db: Setting up DB
2025-05-30 16:24:38,078{GMT}	INFO	[jepsen node n2] maelstrom.db: Setting up n2
2025-05-30 16:24:38,078{GMT}	INFO	[jepsen node n3] maelstrom.db: Setting up n3
2025-05-30 16:24:38,078{GMT}	INFO	[jepsen node n4] maelstrom.db: Setting up n4
2025-05-30 16:24:38,078{GMT}	INFO	[jepsen node n5] maelstrom.db: Setting up n5
2025-05-30 16:24:38,079{GMT}	INFO	[jepsen node n4] maelstrom.process: launching self/server/_build/default/bin/main.exe []
2025-05-30 16:24:38,079{GMT}	INFO	[jepsen node n3] maelstrom.process: launching self/server/_build/default/bin/main.exe []
2025-05-30 16:24:38,079{GMT}	INFO	[jepsen node n5] maelstrom.process: launching self/server/_build/default/bin/main.exe []
2025-05-30 16:24:38,079{GMT}	INFO	[jepsen node n2] maelstrom.process: launching self/server/_build/default/bin/main.exe []
2025-05-30 16:24:38,079{GMT}	INFO	[jepsen node n1] maelstrom.service: Starting services: (lin-kv lin-tso lww-kv seq-kv)
2025-05-30 16:24:38,080{GMT}	INFO	[jepsen node n1] maelstrom.db: Setting up n1
2025-05-30 16:24:38,080{GMT}	INFO	[jepsen node n1] maelstrom.process: launching self/server/_build/default/bin/main.exe []
2025-05-30 16:24:48,094{GMT}	INFO	[jepsen test runner] jepsen.core: Relative time begins now
2025-05-30 16:24:48,106{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:generate	nil
2025-05-30 16:24:48,108{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:generate	"n11"
2025-05-30 16:24:48,309{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:generate	nil
2025-05-30 16:24:48,310{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:generate	"n21"
2025-05-30 16:24:48,697{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:generate	nil
2025-05-30 16:24:48,699{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:generate	"n31"
2025-05-30 16:24:49,020{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:generate	nil
2025-05-30 16:24:49,023{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:ok	:generate	"n41"
2025-05-30 16:24:49,128{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:generate	nil
2025-05-30 16:24:49,130{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:generate	"n51"
2025-05-30 16:24:49,325{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:generate	nil
2025-05-30 16:24:49,428{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:generate	nil
2025-05-30 16:24:49,482{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:generate	nil
2025-05-30 16:24:49,604{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:generate	nil
2025-05-30 16:24:49,817{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:generate	nil
2025-05-30 16:24:54,338{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:info	:generate	nil	:net-timeout
2025-05-30 16:24:54,432{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:info	:generate	nil	:net-timeout
2025-05-30 16:24:54,488{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:info	:generate	nil	:net-timeout
2025-05-30 16:24:54,608{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:info	:generate	nil	:net-timeout
2025-05-30 16:24:54,821{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:info	:generate	nil	:net-timeout
2025-05-30 16:24:54,836{GMT}	INFO	[jepsen test runner] jepsen.core: Run complete, writing
2025-05-30 16:24:54,909{GMT}	INFO	[jepsen node n1] maelstrom.db: Tearing down n1
2025-05-30 16:24:54,910{GMT}	INFO	[jepsen node n2] maelstrom.db: Tearing down n2
2025-05-30 16:24:54,910{GMT}	INFO	[jepsen node n3] maelstrom.db: Tearing down n3
2025-05-30 16:24:54,910{GMT}	INFO	[jepsen node n5] maelstrom.db: Tearing down n5
2025-05-30 16:24:54,910{GMT}	INFO	[jepsen node n4] maelstrom.db: Tearing down n4
2025-05-30 16:24:55,348{GMT}	INFO	[jepsen node n1] maelstrom.net: Shutting down Maelstrom network
2025-05-30 16:24:55,353{GMT}	WARN	[jepsen test runner] jepsen.core: Test crashed!
clojure.lang.ExceptionInfo: Node n1 crashed with exit status 0. Before crashing, it wrote to STDOUT:

{"src":"n1","dest":"c2","body":{"type":"init_ok","in_reply_to":1,"msg_id":0}}
{"src":"n1","dest":"c10","body":{"type":"generate_ok","in_reply_to":1,"msg_id":1,"id":"n11"}}

And to STDERR:

[INFO] Entering main loop
[RECEIVED] {"id":2,"src":"c2","dest":"n1","body":{"type":"init","node_id":"n1","node_ids":["n1","n2","n3","n4","n5"],"msg_id":1}}
[MATCH] InitBody
Initialized node n1
Init send {"src":"n1","dest":"c2","body":{"type":"init_ok","in_reply_to":1,"msg_id":0}}
[RECEIVED] {"id":10,"src":"c10","dest":"n1","body":{"type":"generate","msg_id":1}}
[MATCH] GenerateBody
Generating {"src":"n1","dest":"c10","body":{"type":"generate_ok","in_reply_to":1,"msg_id":1,"id":"n11"}}

Full STDERR logs are available in /Users/adr/code/maelstrom/store/unique-ids/20250530T162436.926-0400/node-logs/n1.log
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.process$stop_node_BANG_.invokeStatic(process.clj:239)
	at maelstrom.process$stop_node_BANG_.invoke(process.clj:217)
	at maelstrom.db$db$reify__16612.teardown_BANG_(db.clj:75)
	at jepsen.db$fn__11629$G__11610__11633.invoke(db.clj:12)
	at jepsen.db$fn__11629$G__11609__11638.invoke(db.clj:12)
	at clojure.core$partial$fn__5927.invoke(core.clj:2642)
	at jepsen.control$on_nodes$fn__9552.invoke(control.clj:319)
	at clojure.lang.AFn.applyToHelper(AFn.java:154)
	at clojure.lang.AFn.applyTo(AFn.java:144)
	at clojure.core$apply.invokeStatic(core.clj:667)
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1990)
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1990)
	at clojure.lang.RestFn.applyTo(RestFn.java:145)
	at clojure.core$apply.invokeStatic(core.clj:671)
	at clojure.core$bound_fn_STAR_$fn__5837.doInvoke(core.clj:2020)
	at clojure.lang.RestFn.invoke(RestFn.java:411)
	at dom_top.core$real_pmap_helper$build_thread__730$fn__731.invoke(core.clj:163)
	at clojure.lang.AFn.applyToHelper(AFn.java:152)
	at clojure.lang.AFn.applyTo(AFn.java:144)
	at clojure.core$apply.invokeStatic(core.clj:667)
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1990)
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1990)
	at clojure.lang.RestFn.invoke(RestFn.java:428)
	at clojure.lang.AFn.applyToHelper(AFn.java:156)
	at clojure.lang.RestFn.applyTo(RestFn.java:135)
	at clojure.core$apply.invokeStatic(core.clj:671)
	at clojure.core$bound_fn_STAR_$fn__5837.doInvoke(core.clj:2020)
	at clojure.lang.RestFn.invoke(RestFn.java:400)
	at clojure.lang.AFn.run(AFn.java:22)
	at java.base/java.lang.Thread.run(Thread.java:1583)
