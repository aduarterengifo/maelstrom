2025-06-02 11:43:58,116{GMT}	INFO	[jepsen test runner] jepsen.core: Test version 9c9bbdfd60f614614ba86cf415b5dc43daf0d73d (plus uncommitted changes)
2025-06-02 11:43:58,117{GMT}	INFO	[jepsen test runner] jepsen.core: Command line:
lein run test -w broadcast --bin self/server/_build/default/bin/main.exe --time-limit 5 --rate 10
2025-06-02 11:43:58,160{GMT}	INFO	[jepsen test runner] jepsen.core: Running test:
{:args []
 :remote
 #jepsen.control.retry.Remote{:remote #jepsen.control.scp.Remote{:cmd-remote #jepsen.control.sshj.SSHJRemote{:concurrency-limit 6,
                                                                                                             :conn-spec nil,
                                                                                                             :client nil,
                                                                                                             :semaphore nil},
                                                                 :conn-spec nil},
                              :conn nil}
 :log-net-send false
 :node-count nil
 :availability nil
 :max-txn-length 4
 :concurrency 5
 :db
 #object[maelstrom.db$db$reify__16612
         "0x54fd5f6"
         "maelstrom.db$db$reify__16612@54fd5f6"]
 :max-writes-per-key 16
 :leave-db-running? false
 :name "broadcast"
 :logging-json? false
 :start-time
 #object[org.joda.time.DateTime "0x1f9b8c23" "2025-06-02T11:43:58.083-04:00"]
 :nemesis-interval 10
 :net
 #object[maelstrom.net$jepsen_net$reify__15721
         "0x6b297a62"
         "maelstrom.net$jepsen_net$reify__15721@6b297a62"]
 :client
 #object[maelstrom.workload.broadcast$client$reify__17142
         "0x11303cb"
         "maelstrom.workload.broadcast$client$reify__17142@11303cb"]
 :barrier
 #object[java.util.concurrent.CyclicBarrier
         "0x655e3f4c"
         "java.util.concurrent.CyclicBarrier@655e3f4c"]
 :log-stderr false
 :pure-generators true
 :ssh {:dummy? true}
 :rate 10.0
 :checker
 #object[jepsen.checker$compose$reify__11089
         "0x26e74d50"
         "jepsen.checker$compose$reify__11089@26e74d50"]
 :argv
 ("test"
  "-w"
  "broadcast"
  "--bin"
  "self/server/_build/default/bin/main.exe"
  "--time-limit"
  "5"
  "--rate"
  "10")
 :nemesis
 (jepsen.nemesis.ReflCompose
  {:fm {:start-partition 0,
        :stop-partition 0,
        :kill 1,
        :start 1,
        :pause 1,
        :resume 1},
   :nemeses [#unprintable "jepsen.nemesis.combined$partition_nemesis$reify__16905@6bdc984"
             #unprintable "jepsen.nemesis.combined$db_nemesis$reify__16886@1f299fc3"]})
 :nodes ["n1" "n2" "n3" "n4" "n5"]
 :test-count 1
 :latency {:mean 0, :dist :constant}
 :bin "self/server/_build/default/bin/main.exe"
 :generator
 #object[jepsen.util.Forgettable
         "0x4b954cbb"
         ((jepsen.generator.Synchronize
           {:gen (jepsen.generator.TimeLimit
                  {:limit 5000000000,
                   :cutoff nil,
                   :gen (jepsen.generator.Any
                         {:gens [(jepsen.generator.OnThreads
                                  {:f #{:nemesis},
                                   :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__12077
                                                           "0x504521ae"
                                                           "jepsen.generator.context$make_thread_filter$lazy_filter__12077@504521ae"],
                                   :gen nil})
                                 (jepsen.generator.OnThreads
                                  {:f #jepsen.generator.context.AllBut{:element :nemesis},
                                   :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__12077
                                                           "0x4a9e6ea7"
                                                           "jepsen.generator.context$make_thread_filter$lazy_filter__12077@4a9e6ea7"],
                                   :gen (jepsen.generator.Stagger
                                         {:dt 200000000,
                                          :next-time nil,
                                          :gen (jepsen.generator.Mix
                                                {:i 0,
                                                 :gens [({:f :broadcast,
                                                          :value 0}
                                                         {:f :broadcast,
                                                          :value 1}
                                                         {:f :broadcast,
                                                          :value 2}
                                                         {:f :broadcast,
                                                          :value 3}
                                                         {:f :broadcast,
                                                          :value 4}
                                                         {:f :broadcast,
                                                          :value 5}
                                                         {:f :broadcast,
                                                          :value 6}
                                                         {:f :broadcast,
                                                          :value 7}
                                                         ...)
                                                        ({:f :read}
                                                         {:f :read}
                                                         {:f :read}
                                                         {:f :read}
                                                         {:f :read}
                                                         {:f :read}
                                                         {:f :read}
                                                         {:f :read}
                                                         ...)]})})})]})})})
          (jepsen.generator.Synchronize
           {:gen (jepsen.generator.OnThreads
                  {:f #{:nemesis},
                   :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__12077
                                           "0x5aaecd25"
                                           "jepsen.generator.context$make_thread_filter$lazy_filter__12077@5aaecd25"],
                   :gen ()})})
          (jepsen.generator.Synchronize
           {:gen {:type :log, :value "Waiting for recovery..."}})
          (jepsen.generator.Synchronize {:gen {:type :sleep, :value 10}})
          (jepsen.generator.Synchronize
           {:gen (jepsen.generator.OnThreads
                  {:f #jepsen.generator.context.AllBut{:element :nemesis},
                   :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__12077
                                           "0x239fdf8f"
                                           "jepsen.generator.context$make_thread_filter$lazy_filter__12077@239fdf8f"],
                   :gen (jepsen.generator.EachThread
                         {:fresh-gen {:f :read, :final? true},
                          :context-filters #object[clojure.core$promise$reify__8621
                                                   "0x1acd660d"
                                                   {:status :pending, :val nil}],
                          :gens {}})})}))]
 :log-net-recv false
 :os
 #object[maelstrom.net$jepsen_os$reify__15724
         "0x22f3b213"
         "maelstrom.net$jepsen_os$reify__15724@22f3b213"]
 :time-limit 5
 :workload :broadcast
 :consistency-models [:strict-serializable]
 :topology :grid}

2025-06-02 11:43:59,306{GMT}	INFO	[jepsen node n1] maelstrom.net: Starting Maelstrom network
2025-06-02 11:43:59,307{GMT}	INFO	[jepsen test runner] jepsen.db: Tearing down DB
2025-06-02 11:43:59,308{GMT}	INFO	[jepsen test runner] jepsen.db: Setting up DB
2025-06-02 11:43:59,308{GMT}	INFO	[jepsen node n3] maelstrom.db: Setting up n3
2025-06-02 11:43:59,308{GMT}	INFO	[jepsen node n2] maelstrom.db: Setting up n2
2025-06-02 11:43:59,308{GMT}	INFO	[jepsen node n4] maelstrom.db: Setting up n4
2025-06-02 11:43:59,308{GMT}	INFO	[jepsen node n5] maelstrom.db: Setting up n5
2025-06-02 11:43:59,309{GMT}	INFO	[jepsen node n2] maelstrom.process: launching self/server/_build/default/bin/main.exe []
2025-06-02 11:43:59,309{GMT}	INFO	[jepsen node n3] maelstrom.process: launching self/server/_build/default/bin/main.exe []
2025-06-02 11:43:59,309{GMT}	INFO	[jepsen node n4] maelstrom.process: launching self/server/_build/default/bin/main.exe []
2025-06-02 11:43:59,309{GMT}	INFO	[jepsen node n5] maelstrom.process: launching self/server/_build/default/bin/main.exe []
2025-06-02 11:43:59,310{GMT}	INFO	[jepsen node n1] maelstrom.service: Starting services: (lin-kv lin-tso lww-kv seq-kv)
2025-06-02 11:43:59,310{GMT}	INFO	[jepsen node n1] maelstrom.db: Setting up n1
2025-06-02 11:43:59,310{GMT}	INFO	[jepsen node n1] maelstrom.process: launching self/server/_build/default/bin/main.exe []
2025-06-02 11:44:08,647{GMT}	INFO	[jepsen test runner] jepsen.core: Relative time begins now
2025-06-02 11:44:08,669{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:broadcast	0
2025-06-02 11:44:08,674{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:broadcast	0
2025-06-02 11:44:08,805{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:read	nil
2025-06-02 11:44:08,813{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:read	["0"]
2025-06-02 11:44:08,874{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:read	nil
2025-06-02 11:44:08,878{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:read	["0"]
2025-06-02 11:44:09,043{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:read	nil
2025-06-02 11:44:09,045{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:ok	:read	["0"]
2025-06-02 11:44:09,154{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:broadcast	1
2025-06-02 11:44:09,159{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:broadcast	1
2025-06-02 11:44:09,226{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	nil
2025-06-02 11:44:09,227{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:read	["0" "1"]
2025-06-02 11:44:09,258{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:broadcast	2
2025-06-02 11:44:09,260{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:broadcast	2
2025-06-02 11:44:09,341{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:broadcast	3
2025-06-02 11:44:09,343{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:broadcast	3
2025-06-02 11:44:09,416{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:read	nil
2025-06-02 11:44:09,417{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:read	["0" "1" "2" "3"]
2025-06-02 11:44:09,445{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:broadcast	4
2025-06-02 11:44:09,446{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:ok	:broadcast	4
2025-06-02 11:44:09,509{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:read	nil
2025-06-02 11:44:09,511{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:read	["0" "1" "2" "3" "4"]
2025-06-02 11:44:09,586{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:broadcast	5
2025-06-02 11:44:09,588{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:broadcast	5
2025-06-02 11:44:09,698{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	nil
2025-06-02 11:44:09,699{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:read	["0" "1" "2" "3" "4" "5"]
2025-06-02 11:44:09,789{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:broadcast	6
2025-06-02 11:44:09,791{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:broadcast	6
2025-06-02 11:44:09,905{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:broadcast	7
2025-06-02 11:44:09,906{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:broadcast	7
2025-06-02 11:44:10,105{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:read	nil
2025-06-02 11:44:10,108{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:ok	:read	["0" "1" "2" "3" "4" "5" "6" "7"]
2025-06-02 11:44:10,253{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:read	nil
2025-06-02 11:44:10,256{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:read	["0" "1" "2" "3" "4" "5" "6" "7"]
2025-06-02 11:44:10,438{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:broadcast	8
2025-06-02 11:44:10,439{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:broadcast	8
2025-06-02 11:44:10,509{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	nil
2025-06-02 11:44:10,510{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:read	["0" "1" "2" "3" "4" "5" "6" "7" "8"]
2025-06-02 11:44:10,570{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:broadcast	9
2025-06-02 11:44:10,571{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:broadcast	9
2025-06-02 11:44:10,601{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:read	nil
2025-06-02 11:44:10,602{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:read	["0" "1" "2" "3" "4" "5" "6" "7" "8" "9"]
2025-06-02 11:44:10,669{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:read	nil
2025-06-02 11:44:10,670{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:ok	:read	["0" "1" "2" "3" "4" "5" "6" "7" "8" "9"]
2025-06-02 11:44:10,790{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:broadcast	10
2025-06-02 11:44:10,791{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:broadcast	10
2025-06-02 11:44:10,823{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:broadcast	11
2025-06-02 11:44:10,825{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:broadcast	11
2025-06-02 11:44:10,889{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	nil
2025-06-02 11:44:10,891{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:read	["0" "1" "10" "11" "2" "3" "4" "5" "6" "7" "8" "9"]
2025-06-02 11:44:11,004{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:broadcast	12
2025-06-02 11:44:11,005{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:broadcast	12
2025-06-02 11:44:11,114{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:read	nil
2025-06-02 11:44:11,115{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:read	["0" "1" "10" "11" "12" "2" "3" "4" "5" "6" "7" "8" "9"]
2025-06-02 11:44:11,116{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:broadcast	13
2025-06-02 11:44:11,116{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:ok	:broadcast	13
2025-06-02 11:44:11,295{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:broadcast	14
2025-06-02 11:44:11,297{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:broadcast	14
2025-06-02 11:44:11,460{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	nil
2025-06-02 11:44:11,462{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:read	["0" "1" "10" "11" "12" "13" "14" "2" "3" "4" "5" "6" "7" "8" "9"]
2025-06-02 11:44:11,546{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	nil
2025-06-02 11:44:11,549{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:read	["0" "1" "10" "11" "12" "13" "14" "2" "3" "4" "5" "6" "7" "8" "9"]
2025-06-02 11:44:11,597{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:broadcast	15
2025-06-02 11:44:11,600{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:broadcast	15
2025-06-02 11:44:11,612{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:read	nil
2025-06-02 11:44:11,614{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:read	["0" "1" "10" "11" "12" "13" "14" "15" "2" "3" "4" "5" "6" "7" "8" "9"]
2025-06-02 11:44:11,744{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:read	nil
2025-06-02 11:44:11,747{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:ok	:read	["0" "1" "10" "11" "12" "13" "14" "15" "2" "3" "4" "5" "6" "7" "8" "9"]
2025-06-02 11:44:11,939{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:broadcast	16
2025-06-02 11:44:11,943{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:broadcast	16
2025-06-02 11:44:12,138{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:broadcast	17
2025-06-02 11:44:12,140{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:broadcast	17
2025-06-02 11:44:12,299{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:broadcast	18
2025-06-02 11:44:12,303{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:broadcast	18
2025-06-02 11:44:12,359{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:broadcast	19
2025-06-02 11:44:12,362{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:broadcast	19
2025-06-02 11:44:12,377{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:broadcast	20
2025-06-02 11:44:12,379{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:broadcast	20
2025-06-02 11:44:12,567{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:broadcast	21
2025-06-02 11:44:12,570{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:ok	:broadcast	21
2025-06-02 11:44:12,574{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:read	nil
2025-06-02 11:44:12,577{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:read	["0" "1" "10" "11" "12" "13" "14" "15" "16" "17" "18" "19" "2" "20" "21" "3" "4" "5" "6" "7" "8" "9"]
2025-06-02 11:44:12,706{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:broadcast	22
2025-06-02 11:44:12,708{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:broadcast	22
2025-06-02 11:44:12,850{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	nil
2025-06-02 11:44:12,852{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:read	["0" "1" "10" "11" "12" "13" "14" "15" "16" "17" "18" "19" "2" "20" "21" "22" "3" "4" "5" "6" "7" "8" "9"]
2025-06-02 11:44:12,876{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:read	nil
2025-06-02 11:44:12,878{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:read	["0" "1" "10" "11" "12" "13" "14" "15" "16" "17" "18" "19" "2" "20" "21" "22" "3" "4" "5" "6" "7" "8" "9"]
2025-06-02 11:44:13,027{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:broadcast	23
2025-06-02 11:44:13,029{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:broadcast	23
2025-06-02 11:44:13,142{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:read	nil
2025-06-02 11:44:13,144{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:ok	:read	["0" "1" "10" "11" "12" "13" "14" "15" "16" "17" "18" "19" "2" "20" "21" "22" "23" "3" "4" "5" "6" "7" "8" "9"]
2025-06-02 11:44:13,287{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:read	nil
2025-06-02 11:44:13,289{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:read	["0" "1" "10" "11" "12" "13" "14" "15" "16" "17" "18" "19" "2" "20" "21" "22" "23" "3" "4" "5" "6" "7" "8" "9"]
2025-06-02 11:44:13,343{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	nil
2025-06-02 11:44:13,345{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:read	["0" "1" "10" "11" "12" "13" "14" "15" "16" "17" "18" "19" "2" "20" "21" "22" "23" "3" "4" "5" "6" "7" "8" "9"]
2025-06-02 11:44:13,373{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:broadcast	24
2025-06-02 11:44:13,375{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:broadcast	24
2025-06-02 11:44:13,511{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:read	nil
2025-06-02 11:44:13,514{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:read	["0" "1" "10" "11" "12" "13" "14" "15" "16" "17" "18" "19" "2" "20" "21" "22" "23" "24" "3" "4" "5" "6" "7" "8" "9"]
2025-06-02 11:44:13,514{GMT}	INFO	[jepsen worker 2] jepsen.generator.interpreter: Waiting for recovery...
2025-06-02 11:44:23,519{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:read	nil
2025-06-02 11:44:23,519{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:read	nil
2025-06-02 11:44:23,519{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:read	nil
2025-06-02 11:44:23,519{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:read	nil
2025-06-02 11:44:23,519{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	nil
2025-06-02 11:44:23,521{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:read	["0" "1" "10" "11" "12" "13" "14" "15" "16" "17" "18" "19" "2" "20" "21" "22" "23" "24" "3" "4" "5" "6" "7" "8" "9"]
2025-06-02 11:44:23,521{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:ok	:read	["0" "1" "10" "11" "12" "13" "14" "15" "16" "17" "18" "19" "2" "20" "21" "22" "23" "24" "3" "4" "5" "6" "7" "8" "9"]
2025-06-02 11:44:23,521{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:read	["0" "1" "10" "11" "12" "13" "14" "15" "16" "17" "18" "19" "2" "20" "21" "22" "23" "24" "3" "4" "5" "6" "7" "8" "9"]
2025-06-02 11:44:23,521{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:read	["0" "1" "10" "11" "12" "13" "14" "15" "16" "17" "18" "19" "2" "20" "21" "22" "23" "24" "3" "4" "5" "6" "7" "8" "9"]
2025-06-02 11:44:23,521{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:read	["0" "1" "10" "11" "12" "13" "14" "15" "16" "17" "18" "19" "2" "20" "21" "22" "23" "24" "3" "4" "5" "6" "7" "8" "9"]
2025-06-02 11:44:23,533{GMT}	INFO	[jepsen test runner] jepsen.core: Run complete, writing
2025-06-02 11:44:23,577{GMT}	INFO	[jepsen node n2] maelstrom.db: Tearing down n2
2025-06-02 11:44:23,577{GMT}	INFO	[jepsen node n1] maelstrom.db: Tearing down n1
2025-06-02 11:44:23,577{GMT}	INFO	[jepsen node n3] maelstrom.db: Tearing down n3
2025-06-02 11:44:23,577{GMT}	INFO	[jepsen node n4] maelstrom.db: Tearing down n4
2025-06-02 11:44:23,577{GMT}	INFO	[jepsen node n5] maelstrom.db: Tearing down n5
2025-06-02 11:44:25,424{GMT}	INFO	[jepsen node n1] maelstrom.net: Shutting down Maelstrom network
2025-06-02 11:44:25,429{GMT}	INFO	[jepsen test runner] jepsen.core: Analyzing...
2025-06-02 11:44:25,704{GMT}	INFO	[jepsen test runner] jepsen.core: Analysis complete
2025-06-02 11:44:25,712{GMT}	INFO	[jepsen results] jepsen.store: Wrote /Users/adr/code/maelstrom/store/broadcast/20250602T114358.083-0400/results.edn
2025-06-02 11:44:25,733{GMT}	INFO	[jepsen test runner] jepsen.core: {:perf {:latency-graph {:valid? true},
        :rate-graph {:valid? true},
        :valid? true},
 :timeline {:valid? true},
 :exceptions {:valid? true},
 :stats {:valid? true,
         :count 55,
         :ok-count 55,
         :fail-count 0,
         :info-count 0,
         :by-f {:broadcast {:valid? true,
                            :count 25,
                            :ok-count 25,
                            :fail-count 0,
                            :info-count 0},
                :read {:valid? true,
                       :count 30,
                       :ok-count 30,
                       :fail-count 0,
                       :info-count 0}}},
 :availability {:valid? true, :ok-fraction 1.0},
 :net {:all {:send-count 380,
             :recv-count 380,
             :msg-count 380,
             :msgs-per-op 6.909091},
       :clients {:send-count 130, :recv-count 130, :msg-count 130},
       :servers {:send-count 250,
                 :recv-count 250,
                 :msg-count 250,
                 :msgs-per-op 4.5454545},
       :valid? true},
 :workload {:worst-stale (),
            :duplicated-count 0,
            :valid? false,
            :lost-count 25,
            :lost (0
                   1
                   2
                   3
                   4
                   5
                   6
                   7
                   8
                   9
                   10
                   11
                   12
                   13
                   14
                   15
                   16
                   17
                   18
                   19
                   20
                   21
                   22
                   23
                   24),
            :stable-count 0,
            :stale-count 0,
            :stale (),
            :never-read-count 0,
            :attempt-count 25,
            :lost-latencies {0 0, 0.5 0, 0.95 0, 0.99 0, 1 0},
            :never-read (),
            :duplicated {}},
 :valid? false}


Analysis invalid! (ﾉಥ益ಥ）ﾉ ┻━┻
