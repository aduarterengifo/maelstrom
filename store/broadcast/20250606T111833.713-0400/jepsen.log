2025-06-06 11:18:33,753{GMT}	INFO	[jepsen test runner] jepsen.core: Test version 0c3c2c75dbcb573641ea386c58bda5103ab5c285 (plus uncommitted changes)
2025-06-06 11:18:33,754{GMT}	INFO	[jepsen test runner] jepsen.core: Command line:
lein run test -w broadcast --bin self/server/_build/default/bin/main.exe --time-limit 20 --rate 10
2025-06-06 11:18:33,795{GMT}	INFO	[jepsen test runner] jepsen.core: Running test:
{:args []
 :remote
 #jepsen.control.retry.Remote{:remote #jepsen.control.scp.Remote{:cmd-remote #jepsen.control.sshj.SSHJRemote{:concurrency-limit 6,
                                                                                                             :conn-spec nil,
                                                                                                             :client nil,
                                                                                                             :semaphore nil},
                                                                 :conn-spec nil},
                              :conn nil}
 :log-net-send false
 :node-count nil
 :availability nil
 :max-txn-length 4
 :concurrency 5
 :db
 #object[maelstrom.db$db$reify__16612
         "0x5a69f1ef"
         "maelstrom.db$db$reify__16612@5a69f1ef"]
 :max-writes-per-key 16
 :leave-db-running? false
 :name "broadcast"
 :logging-json? false
 :start-time
 #object[org.joda.time.DateTime "0x64001530" "2025-06-06T11:18:33.713-04:00"]
 :nemesis-interval 10
 :net
 #object[maelstrom.net$jepsen_net$reify__15721
         "0x1f9b8c23"
         "maelstrom.net$jepsen_net$reify__15721@1f9b8c23"]
 :client
 #object[maelstrom.workload.broadcast$client$reify__17142
         "0x6b297a62"
         "maelstrom.workload.broadcast$client$reify__17142@6b297a62"]
 :barrier
 #object[java.util.concurrent.CyclicBarrier
         "0x11303cb"
         "java.util.concurrent.CyclicBarrier@11303cb"]
 :log-stderr false
 :pure-generators true
 :ssh {:dummy? true}
 :rate 10.0
 :checker
 #object[jepsen.checker$compose$reify__11089
         "0x655e3f4c"
         "jepsen.checker$compose$reify__11089@655e3f4c"]
 :argv
 ("test"
  "-w"
  "broadcast"
  "--bin"
  "self/server/_build/default/bin/main.exe"
  "--time-limit"
  "20"
  "--rate"
  "10")
 :nemesis
 (jepsen.nemesis.ReflCompose
  {:fm {:start-partition 0,
        :stop-partition 0,
        :kill 1,
        :start 1,
        :pause 1,
        :resume 1},
   :nemeses [#unprintable "jepsen.nemesis.combined$partition_nemesis$reify__16905@26e74d50"
             #unprintable "jepsen.nemesis.combined$db_nemesis$reify__16886@6bdc984"]})
 :nodes ["n1" "n2" "n3" "n4" "n5"]
 :test-count 1
 :latency {:mean 0, :dist :constant}
 :bin "self/server/_build/default/bin/main.exe"
 :generator
 #object[jepsen.util.Forgettable
         "0x4c18b432"
         ((jepsen.generator.Synchronize
           {:gen (jepsen.generator.TimeLimit
                  {:limit 20000000000,
                   :cutoff nil,
                   :gen (jepsen.generator.Any
                         {:gens [(jepsen.generator.OnThreads
                                  {:f #{:nemesis},
                                   :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__12077
                                                           "0x2092b072"
                                                           "jepsen.generator.context$make_thread_filter$lazy_filter__12077@2092b072"],
                                   :gen nil})
                                 (jepsen.generator.OnThreads
                                  {:f #jepsen.generator.context.AllBut{:element :nemesis},
                                   :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__12077
                                                           "0x504521ae"
                                                           "jepsen.generator.context$make_thread_filter$lazy_filter__12077@504521ae"],
                                   :gen (jepsen.generator.Stagger
                                         {:dt 200000000,
                                          :next-time nil,
                                          :gen (jepsen.generator.Mix
                                                {:i 0,
                                                 :gens [({:f :broadcast,
                                                          :value 0}
                                                         {:f :broadcast,
                                                          :value 1}
                                                         {:f :broadcast,
                                                          :value 2}
                                                         {:f :broadcast,
                                                          :value 3}
                                                         {:f :broadcast,
                                                          :value 4}
                                                         {:f :broadcast,
                                                          :value 5}
                                                         {:f :broadcast,
                                                          :value 6}
                                                         {:f :broadcast,
                                                          :value 7}
                                                         ...)
                                                        ({:f :read}
                                                         {:f :read}
                                                         {:f :read}
                                                         {:f :read}
                                                         {:f :read}
                                                         {:f :read}
                                                         {:f :read}
                                                         {:f :read}
                                                         ...)]})})})]})})})
          (jepsen.generator.Synchronize
           {:gen (jepsen.generator.OnThreads
                  {:f #{:nemesis},
                   :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__12077
                                           "0x6f8af186"
                                           "jepsen.generator.context$make_thread_filter$lazy_filter__12077@6f8af186"],
                   :gen ()})})
          (jepsen.generator.Synchronize
           {:gen {:type :log, :value "Waiting for recovery..."}})
          (jepsen.generator.Synchronize {:gen {:type :sleep, :value 10}})
          (jepsen.generator.Synchronize
           {:gen (jepsen.generator.OnThreads
                  {:f #jepsen.generator.context.AllBut{:element :nemesis},
                   :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__12077
                                           "0x5aaecd25"
                                           "jepsen.generator.context$make_thread_filter$lazy_filter__12077@5aaecd25"],
                   :gen (jepsen.generator.EachThread
                         {:fresh-gen {:f :read, :final? true},
                          :context-filters #object[clojure.core$promise$reify__8621
                                                   "0x239fdf8f"
                                                   {:status :pending, :val nil}],
                          :gens {}})})}))]
 :log-net-recv false
 :os
 #object[maelstrom.net$jepsen_os$reify__15724
         "0x1acd660d"
         "maelstrom.net$jepsen_os$reify__15724@1acd660d"]
 :time-limit 20
 :workload :broadcast
 :consistency-models [:strict-serializable]
 :topology :grid}

2025-06-06 11:18:34,945{GMT}	INFO	[jepsen node n1] maelstrom.net: Starting Maelstrom network
2025-06-06 11:18:34,946{GMT}	INFO	[jepsen test runner] jepsen.db: Tearing down DB
2025-06-06 11:18:34,948{GMT}	INFO	[jepsen test runner] jepsen.db: Setting up DB
2025-06-06 11:18:34,948{GMT}	INFO	[jepsen node n2] maelstrom.db: Setting up n2
2025-06-06 11:18:34,948{GMT}	INFO	[jepsen node n4] maelstrom.db: Setting up n4
2025-06-06 11:18:34,948{GMT}	INFO	[jepsen node n5] maelstrom.db: Setting up n5
2025-06-06 11:18:34,948{GMT}	INFO	[jepsen node n3] maelstrom.db: Setting up n3
2025-06-06 11:18:34,948{GMT}	INFO	[jepsen node n2] maelstrom.process: launching self/server/_build/default/bin/main.exe []
2025-06-06 11:18:34,949{GMT}	INFO	[jepsen node n5] maelstrom.process: launching self/server/_build/default/bin/main.exe []
2025-06-06 11:18:34,949{GMT}	INFO	[jepsen node n3] maelstrom.process: launching self/server/_build/default/bin/main.exe []
2025-06-06 11:18:34,949{GMT}	INFO	[jepsen node n4] maelstrom.process: launching self/server/_build/default/bin/main.exe []
2025-06-06 11:18:34,950{GMT}	INFO	[jepsen node n1] maelstrom.service: Starting services: (lin-kv lin-tso lww-kv seq-kv)
2025-06-06 11:18:34,951{GMT}	INFO	[jepsen node n1] maelstrom.db: Setting up n1
2025-06-06 11:18:34,951{GMT}	INFO	[jepsen node n1] maelstrom.process: launching self/server/_build/default/bin/main.exe []
2025-06-06 11:18:44,953{GMT}	INFO	[jepsen test runner] jepsen.core: Relative time begins now
2025-06-06 11:18:44,985{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:broadcast	0
2025-06-06 11:18:45,104{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:broadcast	1
2025-06-06 11:18:45,213{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:read	nil
2025-06-06 11:18:45,215{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:read	["0" "1"]
2025-06-06 11:18:45,257{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:broadcast	2
2025-06-06 11:18:45,322{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:read	nil
2025-06-06 11:18:45,325{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:read	["0" "1" "2"]
2025-06-06 11:18:45,445{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:read	nil
2025-06-06 11:18:45,454{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:read	["0" "1" "2"]
2025-06-06 11:18:45,553{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:broadcast	3
2025-06-06 11:18:45,710{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:broadcast	4
2025-06-06 11:18:47,718{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:broadcast	4
2025-06-06 11:18:47,718{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:read	nil
2025-06-06 11:18:47,723{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:read	["0" "1" "2" "3" "4"]
2025-06-06 11:18:47,775{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:read	nil
2025-06-06 11:18:47,776{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:read	["0" "1" "2" "3" "4"]
2025-06-06 11:18:47,917{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:read	nil
2025-06-06 11:18:47,919{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:read	["0" "1" "2" "3" "4"]
2025-06-06 11:18:47,936{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:read	nil
2025-06-06 11:18:47,937{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:read	["0" "1" "2" "3" "4"]
2025-06-06 11:18:47,998{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:broadcast	5
2025-06-06 11:18:50,001{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:info	:broadcast	0	:net-timeout
2025-06-06 11:18:50,001{GMT}	INFO	[jepsen worker 0] jepsen.util: 5	:invoke	:broadcast	6
2025-06-06 11:18:50,004{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:broadcast	5
2025-06-06 11:18:50,109{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:info	:broadcast	1	:net-timeout
2025-06-06 11:18:50,119{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:broadcast	7
2025-06-06 11:18:50,264{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:info	:broadcast	2	:net-timeout
2025-06-06 11:18:50,276{GMT}	INFO	[jepsen worker 3] jepsen.util: 8	:invoke	:broadcast	8
2025-06-06 11:18:50,303{GMT}	INFO	[jepsen worker 1] jepsen.util: 6	:invoke	:read	nil
2025-06-06 11:18:50,305{GMT}	INFO	[jepsen worker 1] jepsen.util: 6	:ok	:read	["0" "1" "2" "3" "4" "5" "6" "7" "8"]
2025-06-06 11:18:50,417{GMT}	INFO	[jepsen worker 1] jepsen.util: 6	:invoke	:read	nil
2025-06-06 11:18:50,417{GMT}	INFO	[jepsen worker 1] jepsen.util: 6	:ok	:read	["0" "1" "2" "3" "4" "5" "6" "7" "8"]
2025-06-06 11:18:50,555{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:info	:broadcast	3	:net-timeout
2025-06-06 11:18:50,568{GMT}	INFO	[jepsen worker 1] jepsen.util: 6	:invoke	:broadcast	9
2025-06-06 11:18:50,704{GMT}	INFO	[jepsen worker 2] jepsen.util: 7	:invoke	:read	nil
2025-06-06 11:18:50,708{GMT}	INFO	[jepsen worker 2] jepsen.util: 7	:ok	:read	["0" "1" "2" "3" "4" "5" "6" "7" "8" "9"]
2025-06-06 11:18:50,708{GMT}	INFO	[jepsen worker 2] jepsen.util: 7	:invoke	:read	nil
2025-06-06 11:18:50,710{GMT}	INFO	[jepsen worker 2] jepsen.util: 7	:ok	:read	["0" "1" "2" "3" "4" "5" "6" "7" "8" "9"]
2025-06-06 11:18:50,913{GMT}	INFO	[jepsen worker 2] jepsen.util: 7	:invoke	:broadcast	10
2025-06-06 11:18:51,277{GMT}	WARN	[n4 stdout] maelstrom.process: Error!
java.lang.AssertionError: Assert failed: Invalid dest for message #maelstrom.net.message.Message{:id 343, :src "n4", :dest "c13", :body {:type "broadcast_ok", :in_reply_to 1, :msg_id 2}}
(get queues (:dest m))
	at maelstrom.net$validate_msg.invokeStatic(net.clj:174)
	at maelstrom.net$validate_msg.invoke(net.clj:166)
	at maelstrom.net$send_BANG_.invokeStatic(net.clj:201)
	at maelstrom.net$send_BANG_.invoke(net.clj:189)
	at maelstrom.process$stdout_thread$fn__16348$fn__16349$fn__16351.invoke(process.clj:147)
	at maelstrom.process$stdout_thread$fn__16348$fn__16349.invoke(process.clj:146)
	at maelstrom.process$stdout_thread$fn__16348.invoke(process.clj:140)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-06 11:18:55,007{GMT}	INFO	[jepsen worker 0] jepsen.util: 5	:info	:broadcast	6	:net-timeout
2025-06-06 11:18:55,007{GMT}	INFO	[jepsen worker 0] jepsen.util: 10	:invoke	:broadcast	11
2025-06-06 11:18:55,121{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:info	:broadcast	7	:net-timeout
2025-06-06 11:18:55,133{GMT}	INFO	[jepsen worker 4] jepsen.util: 9	:invoke	:read	nil
2025-06-06 11:18:55,133{GMT}	INFO	[jepsen worker 4] jepsen.util: 9	:ok	:read	["0" "1" "10" "11" "2" "3" "4" "5" "6" "7" "8" "9"]
2025-06-06 11:18:55,213{GMT}	INFO	[jepsen worker 4] jepsen.util: 9	:invoke	:broadcast	12
2025-06-06 11:18:55,281{GMT}	INFO	[jepsen worker 3] jepsen.util: 8	:info	:broadcast	8	:net-timeout
2025-06-06 11:18:55,281{GMT}	INFO	[jepsen worker 3] jepsen.util: 13	:invoke	:broadcast	13
2025-06-06 11:18:55,573{GMT}	INFO	[jepsen worker 1] jepsen.util: 6	:info	:broadcast	9	:net-timeout
2025-06-06 11:18:55,573{GMT}	INFO	[jepsen worker 1] jepsen.util: 11	:invoke	:read	nil
2025-06-06 11:18:55,574{GMT}	INFO	[jepsen worker 1] jepsen.util: 11	:ok	:read	["0" "1" "10" "11" "12" "2" "3" "4" "5" "6" "7" "8" "9"]
2025-06-06 11:18:55,584{GMT}	INFO	[jepsen worker 1] jepsen.util: 11	:invoke	:broadcast	14
2025-06-06 11:18:55,914{GMT}	INFO	[jepsen worker 2] jepsen.util: 7	:info	:broadcast	10	:net-timeout
2025-06-06 11:18:55,914{GMT}	INFO	[jepsen worker 2] jepsen.util: 12	:invoke	:broadcast	15
2025-06-06 11:18:56,123{GMT}	WARN	[n2 stdout] maelstrom.process: Error!
java.lang.AssertionError: Assert failed: Invalid dest for message #maelstrom.net.message.Message{:id 545, :src "n2", :dest "c11", :body {:type "broadcast_ok", :in_reply_to 1, :msg_id 2}}
(get queues (:dest m))
	at maelstrom.net$validate_msg.invokeStatic(net.clj:174)
	at maelstrom.net$validate_msg.invoke(net.clj:166)
	at maelstrom.net$send_BANG_.invokeStatic(net.clj:201)
	at maelstrom.net$send_BANG_.invoke(net.clj:189)
	at maelstrom.process$stdout_thread$fn__16348$fn__16349$fn__16351.invoke(process.clj:147)
	at maelstrom.process$stdout_thread$fn__16348$fn__16349.invoke(process.clj:146)
	at maelstrom.process$stdout_thread$fn__16348.invoke(process.clj:140)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-06 11:19:00,008{GMT}	INFO	[jepsen worker 0] jepsen.util: 10	:info	:broadcast	11	:net-timeout
2025-06-06 11:19:00,008{GMT}	INFO	[jepsen worker 0] jepsen.util: 15	:invoke	:broadcast	16
2025-06-06 11:19:00,218{GMT}	INFO	[jepsen worker 4] jepsen.util: 9	:info	:broadcast	12	:net-timeout
2025-06-06 11:19:00,218{GMT}	INFO	[jepsen worker 4] jepsen.util: 14	:invoke	:broadcast	17
2025-06-06 11:19:00,286{GMT}	INFO	[jepsen worker 3] jepsen.util: 13	:info	:broadcast	13	:net-timeout
2025-06-06 11:19:00,286{GMT}	INFO	[jepsen worker 3] jepsen.util: 18	:invoke	:broadcast	18
2025-06-06 11:19:00,584{GMT}	INFO	[jepsen worker 1] jepsen.util: 11	:info	:broadcast	14	:net-timeout
2025-06-06 11:19:00,584{GMT}	INFO	[jepsen worker 1] jepsen.util: 16	:invoke	:broadcast	19
2025-06-06 11:19:00,919{GMT}	INFO	[jepsen worker 2] jepsen.util: 12	:info	:broadcast	15	:net-timeout
2025-06-06 11:19:00,919{GMT}	INFO	[jepsen worker 2] jepsen.util: 17	:invoke	:read	nil
2025-06-06 11:19:00,919{GMT}	INFO	[jepsen worker 2] jepsen.util: 17	:ok	:read	["0" "1" "10" "11" "12" "14" "15" "2" "3" "4" "5" "6" "7" "8" "9"]
2025-06-06 11:19:01,094{GMT}	INFO	[jepsen worker 2] jepsen.util: 17	:invoke	:broadcast	20
2025-06-06 11:19:05,009{GMT}	INFO	[jepsen worker 0] jepsen.util: 15	:info	:broadcast	16	:net-timeout
2025-06-06 11:19:05,223{GMT}	INFO	[jepsen worker 4] jepsen.util: 14	:info	:broadcast	17	:net-timeout
2025-06-06 11:19:05,286{GMT}	INFO	[jepsen worker 3] jepsen.util: 18	:info	:broadcast	18	:net-timeout
2025-06-06 11:19:05,587{GMT}	INFO	[jepsen worker 1] jepsen.util: 16	:info	:broadcast	19	:net-timeout
2025-06-06 11:19:06,098{GMT}	INFO	[jepsen worker 2] jepsen.util: 17	:info	:broadcast	20	:net-timeout
2025-06-06 11:19:06,099{GMT}	INFO	[jepsen worker nemesis] jepsen.generator.interpreter: Waiting for recovery...
2025-06-06 11:19:16,105{GMT}	INFO	[jepsen worker 3] jepsen.util: 23	:invoke	:read	nil
2025-06-06 11:19:16,105{GMT}	INFO	[jepsen worker 1] jepsen.util: 21	:invoke	:read	nil
2025-06-06 11:19:16,105{GMT}	INFO	[jepsen worker 4] jepsen.util: 19	:invoke	:read	nil
2025-06-06 11:19:16,105{GMT}	INFO	[jepsen worker 2] jepsen.util: 22	:invoke	:read	nil
2025-06-06 11:19:16,105{GMT}	INFO	[jepsen worker 0] jepsen.util: 20	:invoke	:read	nil
2025-06-06 11:19:16,106{GMT}	INFO	[jepsen worker 2] jepsen.util: 22	:ok	:read	["0" "1" "10" "11" "12" "14" "15" "2" "20" "3" "4" "5" "6" "7" "8" "9"]
2025-06-06 11:19:16,106{GMT}	INFO	[jepsen worker 4] jepsen.util: 19	:ok	:read	["0" "1" "10" "11" "12" "14" "15" "17" "2" "3" "4" "5" "6" "7" "8" "9"]
2025-06-06 11:19:16,106{GMT}	INFO	[jepsen worker 0] jepsen.util: 20	:ok	:read	["0" "1" "10" "11" "12" "14" "15" "16" "2" "3" "4" "5" "6" "7" "8" "9"]
2025-06-06 11:19:21,105{GMT}	INFO	[jepsen worker 1] jepsen.util: 21	:fail	:read	nil	:net-timeout
2025-06-06 11:19:21,106{GMT}	INFO	[jepsen worker 3] jepsen.util: 23	:fail	:read	nil	:net-timeout
2025-06-06 11:19:21,117{GMT}	INFO	[jepsen test runner] jepsen.core: Run complete, writing
2025-06-06 11:19:21,152{GMT}	INFO	[jepsen node n1] maelstrom.db: Tearing down n1
2025-06-06 11:19:21,152{GMT}	INFO	[jepsen node n2] maelstrom.db: Tearing down n2
2025-06-06 11:19:21,152{GMT}	INFO	[jepsen node n4] maelstrom.db: Tearing down n4
2025-06-06 11:19:21,152{GMT}	INFO	[jepsen node n5] maelstrom.db: Tearing down n5
2025-06-06 11:19:21,152{GMT}	INFO	[jepsen node n3] maelstrom.db: Tearing down n3
2025-06-06 11:19:23,126{GMT}	INFO	[jepsen node n1] maelstrom.net: Shutting down Maelstrom network
2025-06-06 11:19:23,128{GMT}	INFO	[jepsen test runner] jepsen.core: Analyzing...
2025-06-06 11:19:23,288{GMT}	INFO	[jepsen test runner] jepsen.core: Analysis complete
2025-06-06 11:19:23,297{GMT}	INFO	[jepsen results] jepsen.store: Wrote /Users/adr/code/maelstrom/store/broadcast/20250606T111833.713-0400/results.edn
2025-06-06 11:19:23,312{GMT}	INFO	[jepsen test runner] jepsen.core: {:perf {:latency-graph {:valid? true},
        :rate-graph {:valid? true},
        :valid? true},
 :timeline {:valid? true},
 :exceptions {:valid? true},
 :stats {:valid? true,
         :count 40,
         :ok-count 19,
         :fail-count 2,
         :info-count 19,
         :by-f {:broadcast {:valid? true,
                            :count 21,
                            :ok-count 2,
                            :fail-count 0,
                            :info-count 19},
                :read {:valid? true,
                       :count 19,
                       :ok-count 17,
                       :fail-count 2,
                       :info-count 0}}},
 :availability {:valid? true, :ok-fraction 0.475},
 :net {:all {:send-count 1241,
             :recv-count 1240,
             :msg-count 1241,
             :msgs-per-op 31.025},
       :clients {:send-count 80, :recv-count 79, :msg-count 80},
       :servers {:send-count 1161,
                 :recv-count 1161,
                 :msg-count 1161,
                 :msgs-per-op 29.025},
       :valid? true},
 :workload {:worst-stale (),
            :duplicated-count 0,
            :valid? false,
            :lost-count 2,
            :lost (4 5),
            :stable-count 0,
            :stale-count 0,
            :stale (),
            :never-read-count 19,
            :attempt-count 21,
            :lost-latencies {0 0, 0.5 0, 0.95 0, 0.99 0, 1 0},
            :never-read (0
                         1
                         2
                         3
                         6
                         7
                         8
                         9
                         10
                         11
                         12
                         13
                         14
                         15
                         16
                         17
                         18
                         19
                         20),
            :duplicated {}},
 :valid? false}


Analysis invalid! (ﾉಥ益ಥ）ﾉ ┻━┻
