2025-05-30 18:57:29,337{GMT}	INFO	[jepsen test runner] jepsen.core: Test version ea0057d853abcf9279a40b55bdf6784a212b6b9f (plus uncommitted changes)
2025-05-30 18:57:29,337{GMT}	INFO	[jepsen test runner] jepsen.core: Command line:
lein run test -w echo --bin self/server/_build/default/bin/main.exe --time-limit 5
2025-05-30 18:57:29,364{GMT}	INFO	[jepsen test runner] jepsen.core: Running test:
{:args []
 :remote
 #jepsen.control.retry.Remote{:remote #jepsen.control.scp.Remote{:cmd-remote #jepsen.control.sshj.SSHJRemote{:concurrency-limit 6,
                                                                                                             :conn-spec nil,
                                                                                                             :client nil,
                                                                                                             :semaphore nil},
                                                                 :conn-spec nil},
                              :conn nil}
 :log-net-send false
 :node-count nil
 :availability nil
 :max-txn-length 4
 :concurrency 5
 :db
 #object[maelstrom.db$db$reify__16612
         "0x5c4f07c1"
         "maelstrom.db$db$reify__16612@5c4f07c1"]
 :max-writes-per-key 16
 :leave-db-running? false
 :name "echo"
 :logging-json? false
 :start-time
 #object[org.joda.time.DateTime "0x219aab91" "2025-05-30T18:57:29.310-04:00"]
 :nemesis-interval 10
 :net
 #object[maelstrom.net$jepsen_net$reify__15721
         "0x71737478"
         "maelstrom.net$jepsen_net$reify__15721@71737478"]
 :client
 #object[maelstrom.workload.echo$client$reify__17402
         "0x64001530"
         "maelstrom.workload.echo$client$reify__17402@64001530"]
 :barrier
 #object[java.util.concurrent.CyclicBarrier
         "0x1f9b8c23"
         "java.util.concurrent.CyclicBarrier@1f9b8c23"]
 :log-stderr false
 :pure-generators true
 :ssh {:dummy? true}
 :rate 5
 :checker
 #object[jepsen.checker$compose$reify__11089
         "0x6b297a62"
         "jepsen.checker$compose$reify__11089@6b297a62"]
 :argv
 ("test"
  "-w"
  "echo"
  "--bin"
  "self/server/_build/default/bin/main.exe"
  "--time-limit"
  "5")
 :nemesis
 (jepsen.nemesis.ReflCompose
  {:fm {:start-partition 0,
        :stop-partition 0,
        :kill 1,
        :start 1,
        :pause 1,
        :resume 1},
   :nemeses [#unprintable "jepsen.nemesis.combined$partition_nemesis$reify__16905@11303cb"
             #unprintable "jepsen.nemesis.combined$db_nemesis$reify__16886@655e3f4c"]})
 :nodes ["n1" "n2" "n3" "n4" "n5"]
 :test-count 1
 :latency {:mean 0, :dist :constant}
 :bin "self/server/_build/default/bin/main.exe"
 :generator
 #object[jepsen.util.Forgettable
         "0x6cf58989"
         (jepsen.generator.TimeLimit
          {:limit 5000000000,
           :cutoff nil,
           :gen (jepsen.generator.Any
                 {:gens [(jepsen.generator.OnThreads
                          {:f #{:nemesis},
                           :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__12077
                                                   "0x37a5ac85"
                                                   "jepsen.generator.context$make_thread_filter$lazy_filter__12077@37a5ac85"],
                           :gen nil})
                         (jepsen.generator.OnThreads
                          {:f #jepsen.generator.context.AllBut{:element :nemesis},
                           :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__12077
                                                   "0x5d4f0fd5"
                                                   "jepsen.generator.context$make_thread_filter$lazy_filter__12077@5d4f0fd5"],
                           :gen (jepsen.generator.Stagger
                                 {:dt 400000000,
                                  :next-time nil,
                                  :gen (jepsen.generator.EachThread
                                        {:fresh-gen #object[maelstrom.workload.echo$workload$fn__17421
                                                            "0x2092b072"
                                                            "maelstrom.workload.echo$workload$fn__17421@2092b072"],
                                         :context-filters #object[clojure.core$promise$reify__8621
                                                                  "0x504521ae"
                                                                  {:status :pending,
                                                                   :val nil}],
                                         :gens {}})})})]})})]
 :log-net-recv false
 :os
 #object[maelstrom.net$jepsen_os$reify__15724
         "0x4a9e6ea7"
         "maelstrom.net$jepsen_os$reify__15724@4a9e6ea7"]
 :time-limit 5
 :workload :echo
 :consistency-models [:strict-serializable]
 :topology :grid}

2025-05-30 18:57:30,176{GMT}	INFO	[jepsen node n1] maelstrom.net: Starting Maelstrom network
2025-05-30 18:57:30,177{GMT}	INFO	[jepsen test runner] jepsen.db: Tearing down DB
2025-05-30 18:57:30,178{GMT}	INFO	[jepsen test runner] jepsen.db: Setting up DB
2025-05-30 18:57:30,178{GMT}	INFO	[jepsen node n2] maelstrom.db: Setting up n2
2025-05-30 18:57:30,178{GMT}	INFO	[jepsen node n3] maelstrom.db: Setting up n3
2025-05-30 18:57:30,178{GMT}	INFO	[jepsen node n4] maelstrom.db: Setting up n4
2025-05-30 18:57:30,178{GMT}	INFO	[jepsen node n5] maelstrom.db: Setting up n5
2025-05-30 18:57:30,178{GMT}	INFO	[jepsen node n2] maelstrom.process: launching self/server/_build/default/bin/main.exe []
2025-05-30 18:57:30,178{GMT}	INFO	[jepsen node n5] maelstrom.process: launching self/server/_build/default/bin/main.exe []
2025-05-30 18:57:30,178{GMT}	INFO	[jepsen node n4] maelstrom.process: launching self/server/_build/default/bin/main.exe []
2025-05-30 18:57:30,178{GMT}	INFO	[jepsen node n3] maelstrom.process: launching self/server/_build/default/bin/main.exe []
2025-05-30 18:57:30,179{GMT}	INFO	[jepsen node n1] maelstrom.service: Starting services: (lin-kv lin-tso lww-kv seq-kv)
2025-05-30 18:57:30,179{GMT}	INFO	[jepsen node n1] maelstrom.db: Setting up n1
2025-05-30 18:57:30,179{GMT}	INFO	[jepsen node n1] maelstrom.process: launching self/server/_build/default/bin/main.exe []
2025-05-30 18:57:39,066{GMT}	INFO	[jepsen test runner] jepsen.core: Relative time begins now
2025-05-30 18:57:39,089{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:echo	"Please echo 113"
2025-05-30 18:57:39,095{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:echo	{:type "echo_ok", :echo "Please echo 113", :msg_id 1, :in_reply_to 1}
2025-05-30 18:57:39,222{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:echo	"Please echo 21"
2025-05-30 18:57:39,223{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:echo	{:type "echo_ok", :echo "Please echo 21", :msg_id 1, :in_reply_to 1}
2025-05-30 18:57:39,506{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:echo	"Please echo 39"
2025-05-30 18:57:39,511{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:echo	{:type "echo_ok", :echo "Please echo 39", :msg_id 1, :in_reply_to 1}
2025-05-30 18:57:39,803{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:echo	"Please echo 6"
2025-05-30 18:57:39,806{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:echo	{:type "echo_ok", :echo "Please echo 6", :msg_id 2, :in_reply_to 2}
2025-05-30 18:57:40,121{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:echo	"Please echo 57"
2025-05-30 18:57:40,124{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:echo	{:type "echo_ok", :echo "Please echo 57", :msg_id 2, :in_reply_to 2}
2025-05-30 18:57:40,395{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:echo	"Please echo 20"
2025-05-30 18:57:40,398{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:echo	{:type "echo_ok", :echo "Please echo 20", :msg_id 3, :in_reply_to 3}
2025-05-30 18:57:40,694{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:echo	"Please echo 22"
2025-05-30 18:57:40,697{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:echo	{:type "echo_ok", :echo "Please echo 22", :msg_id 4, :in_reply_to 4}
2025-05-30 18:57:40,814{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:echo	"Please echo 11"
2025-05-30 18:57:40,814{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:echo	"Please echo 82"
2025-05-30 18:57:40,815{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:echo	{:type "echo_ok", :echo "Please echo 11", :msg_id 1, :in_reply_to 1}
2025-05-30 18:57:40,815{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:echo	{:type "echo_ok", :echo "Please echo 82", :msg_id 2, :in_reply_to 2}
2025-05-30 18:57:41,166{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:echo	"Please echo 23"
2025-05-30 18:57:41,169{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:echo	{:type "echo_ok", :echo "Please echo 23", :msg_id 3, :in_reply_to 3}
2025-05-30 18:57:41,310{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:echo	"Please echo 64"
2025-05-30 18:57:41,311{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:echo	{:type "echo_ok", :echo "Please echo 64", :msg_id 4, :in_reply_to 4}
2025-05-30 18:57:41,351{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:echo	"Please echo 74"
2025-05-30 18:57:41,352{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:echo	{:type "echo_ok", :echo "Please echo 74", :msg_id 5, :in_reply_to 5}
2025-05-30 18:57:41,626{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:echo	"Please echo 94"
2025-05-30 18:57:41,627{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:echo	{:type "echo_ok", :echo "Please echo 94", :msg_id 2, :in_reply_to 2}
2025-05-30 18:57:41,649{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:echo	"Please echo 61"
2025-05-30 18:57:41,650{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:echo	{:type "echo_ok", :echo "Please echo 61", :msg_id 3, :in_reply_to 3}
2025-05-30 18:57:41,663{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:echo	"Please echo 15"
2025-05-30 18:57:41,664{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:echo	{:type "echo_ok", :echo "Please echo 15", :msg_id 6, :in_reply_to 6}
2025-05-30 18:57:41,893{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:echo	"Please echo 82"
2025-05-30 18:57:41,894{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:ok	:echo	{:type "echo_ok", :echo "Please echo 82", :msg_id 1, :in_reply_to 1}
2025-05-30 18:57:41,928{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:echo	"Please echo 117"
2025-05-30 18:57:41,929{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:echo	{:type "echo_ok", :echo "Please echo 117", :msg_id 5, :in_reply_to 5}
2025-05-30 18:57:42,177{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:echo	"Please echo 48"
2025-05-30 18:57:42,178{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:echo	{:type "echo_ok", :echo "Please echo 48", :msg_id 3, :in_reply_to 3}
2025-05-30 18:57:42,238{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:echo	"Please echo 127"
2025-05-30 18:57:42,239{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:echo	{:type "echo_ok", :echo "Please echo 127", :msg_id 7, :in_reply_to 7}
2025-05-30 18:57:42,387{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:echo	"Please echo 16"
2025-05-30 18:57:42,390{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:echo	{:type "echo_ok", :echo "Please echo 16", :msg_id 4, :in_reply_to 4}
2025-05-30 18:57:42,654{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:echo	"Please echo 105"
2025-05-30 18:57:42,659{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:echo	{:type "echo_ok", :echo "Please echo 105", :msg_id 6, :in_reply_to 6}
2025-05-30 18:57:43,018{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:echo	"Please echo 12"
2025-05-30 18:57:43,021{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:echo	{:type "echo_ok", :echo "Please echo 12", :msg_id 5, :in_reply_to 5}
2025-05-30 18:57:43,167{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:echo	"Please echo 124"
2025-05-30 18:57:43,171{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:echo	{:type "echo_ok", :echo "Please echo 124", :msg_id 7, :in_reply_to 7}
2025-05-30 18:57:43,307{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:echo	"Please echo 64"
2025-05-30 18:57:43,308{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:echo	{:type "echo_ok", :echo "Please echo 64", :msg_id 6, :in_reply_to 6}
2025-05-30 18:57:43,351{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:echo	"Please echo 7"
2025-05-30 18:57:43,353{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:echo	{:type "echo_ok", :echo "Please echo 7", :msg_id 8, :in_reply_to 8}
2025-05-30 18:57:43,738{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:echo	"Please echo 4"
2025-05-30 18:57:43,743{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:echo	{:type "echo_ok", :echo "Please echo 4", :msg_id 7, :in_reply_to 7}
2025-05-30 18:57:44,038{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:echo	"Please echo 15"
2025-05-30 18:57:44,041{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:echo	{:type "echo_ok", :echo "Please echo 15", :msg_id 8, :in_reply_to 8}
2025-05-30 18:57:44,061{GMT}	INFO	[jepsen test runner] jepsen.core: Run complete, writing
2025-05-30 18:57:44,103{GMT}	INFO	[jepsen node n4] maelstrom.db: Tearing down n4
2025-05-30 18:57:44,103{GMT}	INFO	[jepsen node n3] maelstrom.db: Tearing down n3
2025-05-30 18:57:44,103{GMT}	INFO	[jepsen node n2] maelstrom.db: Tearing down n2
2025-05-30 18:57:44,103{GMT}	INFO	[jepsen node n5] maelstrom.db: Tearing down n5
2025-05-30 18:57:44,103{GMT}	INFO	[jepsen node n1] maelstrom.db: Tearing down n1
2025-05-30 18:57:46,243{GMT}	INFO	[jepsen node n1] maelstrom.net: Shutting down Maelstrom network
2025-05-30 18:57:46,249{GMT}	INFO	[jepsen test runner] jepsen.core: Analyzing...
2025-05-30 18:57:46,396{GMT}	INFO	[jepsen test runner] jepsen.core: Analysis complete
2025-05-30 18:57:46,401{GMT}	INFO	[jepsen results] jepsen.store: Wrote /Users/adr/code/maelstrom/store/echo/20250530T185729.310-0400/results.edn
2025-05-30 18:57:46,417{GMT}	INFO	[jepsen test runner] jepsen.core: {:perf {:latency-graph {:valid? true},
        :rate-graph {:valid? true},
        :valid? true},
 :timeline {:valid? true},
 :exceptions {:valid? true},
 :stats {:valid? true,
         :count 27,
         :ok-count 27,
         :fail-count 0,
         :info-count 0,
         :by-f {:echo {:valid? true,
                       :count 27,
                       :ok-count 27,
                       :fail-count 0,
                       :info-count 0}}},
 :availability {:valid? true, :ok-fraction 1.0},
 :net {:all {:send-count 64,
             :recv-count 64,
             :msg-count 64,
             :msgs-per-op 2.3703704},
       :clients {:send-count 64, :recv-count 64, :msg-count 64},
       :servers {:send-count 0,
                 :recv-count 0,
                 :msg-count 0,
                 :msgs-per-op 0.0},
       :valid? true},
 :workload {:valid? true, :errors ()},
 :valid? true}


Everything looks good! ヽ(‘ー`)ノ
