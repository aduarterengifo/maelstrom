2025-06-06 11:13:53,672{GMT}	INFO	[jepsen test runner] jepsen.core: Test version 0c3c2c75dbcb573641ea386c58bda5103ab5c285 (plus uncommitted changes)
2025-06-06 11:13:53,673{GMT}	INFO	[jepsen test runner] jepsen.core: Command line:
lein run test -w broadcast --bin self/server/_build/default/bin/main.exe --time-limit 20 --rate 10
2025-06-06 11:13:53,714{GMT}	INFO	[jepsen test runner] jepsen.core: Running test:
{:args []
 :remote
 #jepsen.control.retry.Remote{:remote #jepsen.control.scp.Remote{:cmd-remote #jepsen.control.sshj.SSHJRemote{:concurrency-limit 6,
                                                                                                             :conn-spec nil,
                                                                                                             :client nil,
                                                                                                             :semaphore nil},
                                                                 :conn-spec nil},
                              :conn nil}
 :log-net-send false
 :node-count nil
 :availability nil
 :max-txn-length 4
 :concurrency 5
 :db
 #object[maelstrom.db$db$reify__16612
         "0x5a69f1ef"
         "maelstrom.db$db$reify__16612@5a69f1ef"]
 :max-writes-per-key 16
 :leave-db-running? false
 :name "broadcast"
 :logging-json? false
 :start-time
 #object[org.joda.time.DateTime "0x64001530" "2025-06-06T11:13:53.635-04:00"]
 :nemesis-interval 10
 :net
 #object[maelstrom.net$jepsen_net$reify__15721
         "0x1f9b8c23"
         "maelstrom.net$jepsen_net$reify__15721@1f9b8c23"]
 :client
 #object[maelstrom.workload.broadcast$client$reify__17142
         "0x6b297a62"
         "maelstrom.workload.broadcast$client$reify__17142@6b297a62"]
 :barrier
 #object[java.util.concurrent.CyclicBarrier
         "0x11303cb"
         "java.util.concurrent.CyclicBarrier@11303cb"]
 :log-stderr false
 :pure-generators true
 :ssh {:dummy? true}
 :rate 10.0
 :checker
 #object[jepsen.checker$compose$reify__11089
         "0x655e3f4c"
         "jepsen.checker$compose$reify__11089@655e3f4c"]
 :argv
 ("test"
  "-w"
  "broadcast"
  "--bin"
  "self/server/_build/default/bin/main.exe"
  "--time-limit"
  "20"
  "--rate"
  "10")
 :nemesis
 (jepsen.nemesis.ReflCompose
  {:fm {:start-partition 0,
        :stop-partition 0,
        :kill 1,
        :start 1,
        :pause 1,
        :resume 1},
   :nemeses [#unprintable "jepsen.nemesis.combined$partition_nemesis$reify__16905@26e74d50"
             #unprintable "jepsen.nemesis.combined$db_nemesis$reify__16886@6bdc984"]})
 :nodes ["n1" "n2" "n3" "n4" "n5"]
 :test-count 1
 :latency {:mean 0, :dist :constant}
 :bin "self/server/_build/default/bin/main.exe"
 :generator
 #object[jepsen.util.Forgettable
         "0x4c18b432"
         ((jepsen.generator.Synchronize
           {:gen (jepsen.generator.TimeLimit
                  {:limit 20000000000,
                   :cutoff nil,
                   :gen (jepsen.generator.Any
                         {:gens [(jepsen.generator.OnThreads
                                  {:f #{:nemesis},
                                   :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__12077
                                                           "0x2092b072"
                                                           "jepsen.generator.context$make_thread_filter$lazy_filter__12077@2092b072"],
                                   :gen nil})
                                 (jepsen.generator.OnThreads
                                  {:f #jepsen.generator.context.AllBut{:element :nemesis},
                                   :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__12077
                                                           "0x504521ae"
                                                           "jepsen.generator.context$make_thread_filter$lazy_filter__12077@504521ae"],
                                   :gen (jepsen.generator.Stagger
                                         {:dt 200000000,
                                          :next-time nil,
                                          :gen (jepsen.generator.Mix
                                                {:i 0,
                                                 :gens [({:f :broadcast,
                                                          :value 0}
                                                         {:f :broadcast,
                                                          :value 1}
                                                         {:f :broadcast,
                                                          :value 2}
                                                         {:f :broadcast,
                                                          :value 3}
                                                         {:f :broadcast,
                                                          :value 4}
                                                         {:f :broadcast,
                                                          :value 5}
                                                         {:f :broadcast,
                                                          :value 6}
                                                         {:f :broadcast,
                                                          :value 7}
                                                         ...)
                                                        ({:f :read}
                                                         {:f :read}
                                                         {:f :read}
                                                         {:f :read}
                                                         {:f :read}
                                                         {:f :read}
                                                         {:f :read}
                                                         {:f :read}
                                                         ...)]})})})]})})})
          (jepsen.generator.Synchronize
           {:gen (jepsen.generator.OnThreads
                  {:f #{:nemesis},
                   :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__12077
                                           "0x6f8af186"
                                           "jepsen.generator.context$make_thread_filter$lazy_filter__12077@6f8af186"],
                   :gen ()})})
          (jepsen.generator.Synchronize
           {:gen {:type :log, :value "Waiting for recovery..."}})
          (jepsen.generator.Synchronize {:gen {:type :sleep, :value 10}})
          (jepsen.generator.Synchronize
           {:gen (jepsen.generator.OnThreads
                  {:f #jepsen.generator.context.AllBut{:element :nemesis},
                   :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__12077
                                           "0x5aaecd25"
                                           "jepsen.generator.context$make_thread_filter$lazy_filter__12077@5aaecd25"],
                   :gen (jepsen.generator.EachThread
                         {:fresh-gen {:f :read, :final? true},
                          :context-filters #object[clojure.core$promise$reify__8621
                                                   "0x239fdf8f"
                                                   {:status :pending, :val nil}],
                          :gens {}})})}))]
 :log-net-recv false
 :os
 #object[maelstrom.net$jepsen_os$reify__15724
         "0x1acd660d"
         "maelstrom.net$jepsen_os$reify__15724@1acd660d"]
 :time-limit 20
 :workload :broadcast
 :consistency-models [:strict-serializable]
 :topology :grid}

2025-06-06 11:13:54,883{GMT}	INFO	[jepsen node n1] maelstrom.net: Starting Maelstrom network
2025-06-06 11:13:54,883{GMT}	INFO	[jepsen test runner] jepsen.db: Tearing down DB
2025-06-06 11:13:54,884{GMT}	INFO	[jepsen test runner] jepsen.db: Setting up DB
2025-06-06 11:13:54,885{GMT}	INFO	[jepsen node n2] maelstrom.db: Setting up n2
2025-06-06 11:13:54,885{GMT}	INFO	[jepsen node n5] maelstrom.db: Setting up n5
2025-06-06 11:13:54,885{GMT}	INFO	[jepsen node n4] maelstrom.db: Setting up n4
2025-06-06 11:13:54,885{GMT}	INFO	[jepsen node n3] maelstrom.db: Setting up n3
2025-06-06 11:13:54,885{GMT}	INFO	[jepsen node n5] maelstrom.process: launching self/server/_build/default/bin/main.exe []
2025-06-06 11:13:54,885{GMT}	INFO	[jepsen node n3] maelstrom.process: launching self/server/_build/default/bin/main.exe []
2025-06-06 11:13:54,885{GMT}	INFO	[jepsen node n4] maelstrom.process: launching self/server/_build/default/bin/main.exe []
2025-06-06 11:13:54,885{GMT}	INFO	[jepsen node n2] maelstrom.process: launching self/server/_build/default/bin/main.exe []
2025-06-06 11:13:54,886{GMT}	INFO	[jepsen node n1] maelstrom.service: Starting services: (lin-kv lin-tso lww-kv seq-kv)
2025-06-06 11:13:54,887{GMT}	INFO	[jepsen node n1] maelstrom.db: Setting up n1
2025-06-06 11:13:54,887{GMT}	INFO	[jepsen node n1] maelstrom.process: launching self/server/_build/default/bin/main.exe []
2025-06-06 11:14:04,546{GMT}	INFO	[jepsen test runner] jepsen.core: Relative time begins now
2025-06-06 11:14:04,602{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:broadcast	0
2025-06-06 11:14:04,804{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:read	nil
2025-06-06 11:14:04,809{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:read	["0"]
2025-06-06 11:14:04,898{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:broadcast	1
2025-06-06 11:14:05,031{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:broadcast	2
2025-06-06 11:14:05,128{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:read	nil
2025-06-06 11:14:05,133{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:read	["0" "1" "2"]
2025-06-06 11:14:05,250{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:broadcast	3
2025-06-06 11:14:05,373{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:read	nil
2025-06-06 11:14:05,376{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:read	["0" "1" "2" "3"]
2025-06-06 11:14:05,469{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:read	nil
2025-06-06 11:14:05,473{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:read	["0" "1" "2" "3"]
2025-06-06 11:14:05,625{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:broadcast	4
2025-06-06 11:14:07,609{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:broadcast	0
2025-06-06 11:14:07,610{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	nil
2025-06-06 11:14:07,612{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:read	["0" "1" "2" "3" "4"]
2025-06-06 11:14:07,799{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	nil
2025-06-06 11:14:07,802{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:read	["0" "1" "2" "3" "4"]
2025-06-06 11:14:07,918{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	nil
2025-06-06 11:14:07,920{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:read	["0" "1" "2" "3" "4"]
2025-06-06 11:14:08,042{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:ok	:broadcast	2
2025-06-06 11:14:08,080{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	nil
2025-06-06 11:14:08,082{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:read	["0" "1" "2" "3" "4"]
2025-06-06 11:14:08,223{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:broadcast	5
2025-06-06 11:14:08,259{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:broadcast	3
2025-06-06 11:14:08,331{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:broadcast	6
2025-06-06 11:14:08,522{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:broadcast	7
2025-06-06 11:14:08,909{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:broadcast	1
2025-06-06 11:14:08,910{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:broadcast	8
2025-06-06 11:14:10,631{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:info	:broadcast	4	:net-timeout
2025-06-06 11:14:10,631{GMT}	INFO	[jepsen worker 4] jepsen.util: 9	:invoke	:read	nil
2025-06-06 11:14:10,632{GMT}	INFO	[jepsen worker 4] jepsen.util: 9	:ok	:read	["0" "1" "2" "3" "4" "5" "6" "7" "8"]
2025-06-06 11:14:10,744{GMT}	INFO	[jepsen worker 4] jepsen.util: 9	:invoke	:broadcast	9
2025-06-06 11:14:11,748{GMT}	INFO	[jepsen worker 4] jepsen.util: 9	:ok	:broadcast	9
2025-06-06 11:14:11,749{GMT}	INFO	[jepsen worker 4] jepsen.util: 9	:invoke	:read	nil
2025-06-06 11:14:11,749{GMT}	INFO	[jepsen worker 4] jepsen.util: 9	:ok	:read	["0" "1" "2" "3" "4" "5" "6" "7" "8" "9"]
2025-06-06 11:14:11,802{GMT}	INFO	[jepsen worker 4] jepsen.util: 9	:invoke	:broadcast	10
2025-06-06 11:14:12,535{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:broadcast	7
2025-06-06 11:14:12,535{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:broadcast	11
2025-06-06 11:14:13,229{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:info	:broadcast	5	:net-timeout
2025-06-06 11:14:13,230{GMT}	INFO	[jepsen worker 3] jepsen.util: 8	:invoke	:read	nil
2025-06-06 11:14:13,232{GMT}	INFO	[jepsen worker 3] jepsen.util: 8	:ok	:read	["0" "1" "10" "11" "2" "3" "4" "5" "6" "7" "8" "9"]
2025-06-06 11:14:13,245{GMT}	WARN	[n4 stdout] maelstrom.process: Error!
java.lang.AssertionError: Assert failed: Invalid dest for message #maelstrom.net.message.Message{:id 466, :src "n4", :dest "c13", :body {:type "broadcast_ok", :in_reply_to 2, :msg_id 17}}
(get queues (:dest m))
	at maelstrom.net$validate_msg.invokeStatic(net.clj:174)
	at maelstrom.net$validate_msg.invoke(net.clj:166)
	at maelstrom.net$send_BANG_.invokeStatic(net.clj:201)
	at maelstrom.net$send_BANG_.invoke(net.clj:189)
	at maelstrom.process$stdout_thread$fn__16348$fn__16349$fn__16351.invoke(process.clj:147)
	at maelstrom.process$stdout_thread$fn__16348$fn__16349.invoke(process.clj:146)
	at maelstrom.process$stdout_thread$fn__16348.invoke(process.clj:140)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-06 11:14:13,257{GMT}	INFO	[jepsen worker 3] jepsen.util: 8	:invoke	:broadcast	12
2025-06-06 11:14:13,334{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:info	:broadcast	6	:net-timeout
2025-06-06 11:14:13,334{GMT}	INFO	[jepsen worker 0] jepsen.util: 5	:invoke	:read	nil
2025-06-06 11:14:13,335{GMT}	INFO	[jepsen worker 0] jepsen.util: 5	:ok	:read	["0" "1" "10" "11" "2" "3" "4" "5" "6" "7" "8" "9"]
2025-06-06 11:14:13,463{GMT}	INFO	[jepsen worker 0] jepsen.util: 5	:invoke	:broadcast	13
2025-06-06 11:14:13,915{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:info	:broadcast	8	:net-timeout
2025-06-06 11:14:13,915{GMT}	INFO	[jepsen worker 2] jepsen.util: 7	:invoke	:broadcast	14
2025-06-06 11:14:14,345{GMT}	WARN	[n1 stdout] maelstrom.process: Error!
java.lang.AssertionError: Assert failed: Invalid dest for message #maelstrom.net.message.Message{:id 517, :src "n1", :dest "c10", :body {:type "broadcast_ok", :in_reply_to 6, :msg_id 15}}
(get queues (:dest m))
	at maelstrom.net$validate_msg.invokeStatic(net.clj:174)
	at maelstrom.net$validate_msg.invoke(net.clj:166)
	at maelstrom.net$send_BANG_.invokeStatic(net.clj:201)
	at maelstrom.net$send_BANG_.invoke(net.clj:189)
	at maelstrom.process$stdout_thread$fn__16348$fn__16349$fn__16351.invoke(process.clj:147)
	at maelstrom.process$stdout_thread$fn__16348$fn__16349.invoke(process.clj:146)
	at maelstrom.process$stdout_thread$fn__16348.invoke(process.clj:140)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-06 11:14:16,806{GMT}	INFO	[jepsen worker 4] jepsen.util: 9	:info	:broadcast	10	:net-timeout
2025-06-06 11:14:16,807{GMT}	INFO	[jepsen worker 4] jepsen.util: 14	:invoke	:read	nil
2025-06-06 11:14:16,807{GMT}	INFO	[jepsen worker 4] jepsen.util: 14	:ok	:read	["0" "1" "10" "11" "13" "14" "2" "3" "4" "5" "6" "7" "8" "9"]
2025-06-06 11:14:16,846{GMT}	INFO	[jepsen worker 4] jepsen.util: 14	:invoke	:read	nil
2025-06-06 11:14:16,847{GMT}	INFO	[jepsen worker 4] jepsen.util: 14	:ok	:read	["0" "1" "10" "11" "13" "14" "2" "3" "4" "5" "6" "7" "8" "9"]
2025-06-06 11:14:16,983{GMT}	INFO	[jepsen worker 4] jepsen.util: 14	:invoke	:broadcast	15
2025-06-06 11:14:17,537{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:info	:broadcast	11	:net-timeout
2025-06-06 11:14:17,537{GMT}	INFO	[jepsen worker 1] jepsen.util: 6	:invoke	:read	nil
2025-06-06 11:14:17,537{GMT}	INFO	[jepsen worker 1] jepsen.util: 6	:ok	:read	["0" "1" "10" "11" "13" "14" "15" "2" "3" "4" "5" "6" "7" "8" "9"]
2025-06-06 11:14:17,544{GMT}	WARN	[n2 stdout] maelstrom.process: Error!
java.lang.AssertionError: Assert failed: Invalid dest for message #maelstrom.net.message.Message{:id 616, :src "n2", :dest "c11", :body {:type "broadcast_ok", :in_reply_to 4, :msg_id 59}}
(get queues (:dest m))
	at maelstrom.net$validate_msg.invokeStatic(net.clj:174)
	at maelstrom.net$validate_msg.invoke(net.clj:166)
	at maelstrom.net$send_BANG_.invokeStatic(net.clj:201)
	at maelstrom.net$send_BANG_.invoke(net.clj:189)
	at maelstrom.process$stdout_thread$fn__16348$fn__16349$fn__16351.invoke(process.clj:147)
	at maelstrom.process$stdout_thread$fn__16348$fn__16349.invoke(process.clj:146)
	at maelstrom.process$stdout_thread$fn__16348.invoke(process.clj:140)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-06 11:14:17,693{GMT}	INFO	[jepsen worker 1] jepsen.util: 6	:invoke	:broadcast	16
2025-06-06 11:14:18,261{GMT}	INFO	[jepsen worker 3] jepsen.util: 8	:info	:broadcast	12	:net-timeout
2025-06-06 11:14:18,262{GMT}	INFO	[jepsen worker 3] jepsen.util: 13	:invoke	:read	nil
2025-06-06 11:14:18,463{GMT}	INFO	[jepsen worker 0] jepsen.util: 5	:info	:broadcast	13	:net-timeout
2025-06-06 11:14:18,463{GMT}	INFO	[jepsen worker 0] jepsen.util: 10	:invoke	:read	nil
2025-06-06 11:14:18,920{GMT}	INFO	[jepsen worker 2] jepsen.util: 7	:info	:broadcast	14	:net-timeout
2025-06-06 11:14:18,920{GMT}	INFO	[jepsen worker 2] jepsen.util: 12	:invoke	:read	nil
2025-06-06 11:14:18,921{GMT}	INFO	[jepsen worker 2] jepsen.util: 12	:ok	:read	["0" "1" "10" "11" "13" "14" "15" "2" "3" "4" "5" "6" "7" "8" "9"]
2025-06-06 11:14:18,964{GMT}	INFO	[jepsen worker 2] jepsen.util: 12	:invoke	:read	nil
2025-06-06 11:14:18,965{GMT}	INFO	[jepsen worker 2] jepsen.util: 12	:ok	:read	["0" "1" "10" "11" "13" "14" "15" "2" "3" "4" "5" "6" "7" "8" "9"]
2025-06-06 11:14:19,160{GMT}	INFO	[jepsen worker 2] jepsen.util: 12	:invoke	:broadcast	17
2025-06-06 11:14:21,987{GMT}	INFO	[jepsen worker 4] jepsen.util: 14	:info	:broadcast	15	:net-timeout
2025-06-06 11:14:21,987{GMT}	INFO	[jepsen worker 4] jepsen.util: 19	:invoke	:read	nil
2025-06-06 11:14:21,987{GMT}	INFO	[jepsen worker 4] jepsen.util: 19	:ok	:read	["0" "1" "10" "11" "13" "14" "15" "2" "3" "4" "5" "6" "7" "8" "9"]
2025-06-06 11:14:22,052{GMT}	INFO	[jepsen worker 4] jepsen.util: 19	:invoke	:broadcast	18
2025-06-06 11:14:22,698{GMT}	INFO	[jepsen worker 1] jepsen.util: 6	:info	:broadcast	16	:net-timeout
2025-06-06 11:14:22,698{GMT}	INFO	[jepsen worker 1] jepsen.util: 11	:invoke	:broadcast	19
2025-06-06 11:14:23,267{GMT}	INFO	[jepsen worker 3] jepsen.util: 13	:fail	:read	nil	:net-timeout
2025-06-06 11:14:23,267{GMT}	INFO	[jepsen worker 3] jepsen.util: 13	:invoke	:broadcast	20
2025-06-06 11:14:23,464{GMT}	INFO	[jepsen worker 0] jepsen.util: 10	:fail	:read	nil	:net-timeout
2025-06-06 11:14:23,464{GMT}	INFO	[jepsen worker 0] jepsen.util: 10	:invoke	:read	nil
2025-06-06 11:14:24,165{GMT}	INFO	[jepsen worker 2] jepsen.util: 12	:info	:broadcast	17	:net-timeout
2025-06-06 11:14:24,165{GMT}	INFO	[jepsen worker 2] jepsen.util: 17	:invoke	:read	nil
2025-06-06 11:14:24,165{GMT}	INFO	[jepsen worker 2] jepsen.util: 17	:ok	:read	["0" "1" "10" "11" "13" "14" "15" "17" "2" "3" "4" "5" "6" "7" "8" "9"]
2025-06-06 11:14:24,267{GMT}	INFO	[jepsen worker 2] jepsen.util: 17	:invoke	:broadcast	21
2025-06-06 11:14:27,056{GMT}	INFO	[jepsen worker 4] jepsen.util: 19	:info	:broadcast	18	:net-timeout
2025-06-06 11:14:27,698{GMT}	INFO	[jepsen worker 1] jepsen.util: 11	:info	:broadcast	19	:net-timeout
2025-06-06 11:14:28,271{GMT}	INFO	[jepsen worker 3] jepsen.util: 13	:info	:broadcast	20	:net-timeout
2025-06-06 11:14:28,466{GMT}	INFO	[jepsen worker 0] jepsen.util: 10	:fail	:read	nil	:net-timeout
2025-06-06 11:14:29,268{GMT}	INFO	[jepsen worker 2] jepsen.util: 17	:info	:broadcast	21	:net-timeout
2025-06-06 11:14:29,268{GMT}	INFO	[jepsen worker 2] jepsen.generator.interpreter: Waiting for recovery...
2025-06-06 11:14:39,273{GMT}	INFO	[jepsen worker 0] jepsen.util: 10	:invoke	:read	nil
2025-06-06 11:14:39,273{GMT}	INFO	[jepsen worker 3] jepsen.util: 18	:invoke	:read	nil
2025-06-06 11:14:39,273{GMT}	INFO	[jepsen worker 2] jepsen.util: 22	:invoke	:read	nil
2025-06-06 11:14:39,273{GMT}	INFO	[jepsen worker 4] jepsen.util: 24	:invoke	:read	nil
2025-06-06 11:14:39,273{GMT}	INFO	[jepsen worker 1] jepsen.util: 16	:invoke	:read	nil
2025-06-06 11:14:39,274{GMT}	INFO	[jepsen worker 2] jepsen.util: 22	:ok	:read	["0" "1" "10" "11" "13" "14" "15" "17" "2" "21" "3" "4" "5" "6" "7" "8" "9"]
2025-06-06 11:14:39,274{GMT}	INFO	[jepsen worker 4] jepsen.util: 24	:ok	:read	["0" "1" "10" "11" "13" "14" "15" "18" "2" "3" "4" "5" "6" "7" "8" "9"]
2025-06-06 11:14:44,274{GMT}	INFO	[jepsen worker 3] jepsen.util: 18	:fail	:read	nil	:net-timeout
2025-06-06 11:14:44,274{GMT}	INFO	[jepsen worker 1] jepsen.util: 16	:fail	:read	nil	:net-timeout
2025-06-06 11:14:44,274{GMT}	INFO	[jepsen worker 0] jepsen.util: 10	:fail	:read	nil	:net-timeout
2025-06-06 11:14:44,300{GMT}	INFO	[jepsen test runner] jepsen.core: Run complete, writing
2025-06-06 11:14:44,340{GMT}	INFO	[jepsen node n5] maelstrom.db: Tearing down n5
2025-06-06 11:14:44,340{GMT}	INFO	[jepsen node n3] maelstrom.db: Tearing down n3
2025-06-06 11:14:44,340{GMT}	INFO	[jepsen node n2] maelstrom.db: Tearing down n2
2025-06-06 11:14:44,340{GMT}	INFO	[jepsen node n4] maelstrom.db: Tearing down n4
2025-06-06 11:14:44,340{GMT}	INFO	[jepsen node n1] maelstrom.db: Tearing down n1
2025-06-06 11:14:46,069{GMT}	INFO	[jepsen node n1] maelstrom.net: Shutting down Maelstrom network
2025-06-06 11:14:46,075{GMT}	INFO	[jepsen test runner] jepsen.core: Analyzing...
2025-06-06 11:14:46,249{GMT}	INFO	[jepsen test runner] jepsen.core: Analysis complete
2025-06-06 11:14:46,263{GMT}	INFO	[jepsen results] jepsen.store: Wrote /Users/adr/code/maelstrom/store/broadcast/20250606T111353.635-0400/results.edn
2025-06-06 11:14:46,276{GMT}	INFO	[jepsen test runner] jepsen.core: {:perf {:latency-graph {:valid? true},
        :rate-graph {:valid? true},
        :valid? true},
 :timeline {:valid? true},
 :exceptions {:valid? true},
 :stats {:valid? true,
         :count 49,
         :ok-count 27,
         :fail-count 6,
         :info-count 16,
         :by-f {:broadcast {:valid? true,
                            :count 22,
                            :ok-count 6,
                            :fail-count 0,
                            :info-count 16},
                :read {:valid? true,
                       :count 27,
                       :ok-count 21,
                       :fail-count 6,
                       :info-count 0}}},
 :availability {:valid? true, :ok-fraction 0.5510204},
 :net {:all {:send-count 1001,
             :recv-count 1001,
             :msg-count 1001,
             :msgs-per-op 20.428572},
       :clients {:send-count 96, :recv-count 96, :msg-count 96},
       :servers {:send-count 905,
                 :recv-count 905,
                 :msg-count 905,
                 :msgs-per-op 18.469387},
       :valid? true},
 :workload {:worst-stale (),
            :duplicated-count 0,
            :valid? false,
            :lost-count 6,
            :lost (0 1 2 3 7 9),
            :stable-count 0,
            :stale-count 0,
            :stale (),
            :never-read-count 16,
            :attempt-count 22,
            :lost-latencies {0 0, 0.5 0, 0.95 0, 0.99 0, 1 0},
            :never-read (4 5 6 8 10 11 12 13 14 15 16 17 18 19 20 21),
            :duplicated {}},
 :valid? false}


Analysis invalid! (ﾉಥ益ಥ）ﾉ ┻━┻
