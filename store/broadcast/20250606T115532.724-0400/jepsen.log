2025-06-06 11:55:32,766{GMT}	INFO	[jepsen test runner] jepsen.core: Test version 0c3c2c75dbcb573641ea386c58bda5103ab5c285 (plus uncommitted changes)
2025-06-06 11:55:32,766{GMT}	INFO	[jepsen test runner] jepsen.core: Command line:
lein run test -w broadcast --bin self/server/_build/default/bin/main.exe --time-limit 20 --rate 10
2025-06-06 11:55:32,819{GMT}	INFO	[jepsen test runner] jepsen.core: Running test:
{:args []
 :remote
 #jepsen.control.retry.Remote{:remote #jepsen.control.scp.Remote{:cmd-remote #jepsen.control.sshj.SSHJRemote{:concurrency-limit 6,
                                                                                                             :conn-spec nil,
                                                                                                             :client nil,
                                                                                                             :semaphore nil},
                                                                 :conn-spec nil},
                              :conn nil}
 :log-net-send false
 :node-count nil
 :availability nil
 :max-txn-length 4
 :concurrency 5
 :db
 #object[maelstrom.db$db$reify__16612
         "0x5a69f1ef"
         "maelstrom.db$db$reify__16612@5a69f1ef"]
 :max-writes-per-key 16
 :leave-db-running? false
 :name "broadcast"
 :logging-json? false
 :start-time
 #object[org.joda.time.DateTime "0x64001530" "2025-06-06T11:55:32.724-04:00"]
 :nemesis-interval 10
 :net
 #object[maelstrom.net$jepsen_net$reify__15721
         "0x1f9b8c23"
         "maelstrom.net$jepsen_net$reify__15721@1f9b8c23"]
 :client
 #object[maelstrom.workload.broadcast$client$reify__17142
         "0x6b297a62"
         "maelstrom.workload.broadcast$client$reify__17142@6b297a62"]
 :barrier
 #object[java.util.concurrent.CyclicBarrier
         "0x11303cb"
         "java.util.concurrent.CyclicBarrier@11303cb"]
 :log-stderr false
 :pure-generators true
 :ssh {:dummy? true}
 :rate 10.0
 :checker
 #object[jepsen.checker$compose$reify__11089
         "0x655e3f4c"
         "jepsen.checker$compose$reify__11089@655e3f4c"]
 :argv
 ("test"
  "-w"
  "broadcast"
  "--bin"
  "self/server/_build/default/bin/main.exe"
  "--time-limit"
  "20"
  "--rate"
  "10")
 :nemesis
 (jepsen.nemesis.ReflCompose
  {:fm {:start-partition 0,
        :stop-partition 0,
        :kill 1,
        :start 1,
        :pause 1,
        :resume 1},
   :nemeses [#unprintable "jepsen.nemesis.combined$partition_nemesis$reify__16905@26e74d50"
             #unprintable "jepsen.nemesis.combined$db_nemesis$reify__16886@6bdc984"]})
 :nodes ["n1" "n2" "n3" "n4" "n5"]
 :test-count 1
 :latency {:mean 0, :dist :constant}
 :bin "self/server/_build/default/bin/main.exe"
 :generator
 #object[jepsen.util.Forgettable
         "0x4c18b432"
         ((jepsen.generator.Synchronize
           {:gen (jepsen.generator.TimeLimit
                  {:limit 20000000000,
                   :cutoff nil,
                   :gen (jepsen.generator.Any
                         {:gens [(jepsen.generator.OnThreads
                                  {:f #{:nemesis},
                                   :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__12077
                                                           "0x2092b072"
                                                           "jepsen.generator.context$make_thread_filter$lazy_filter__12077@2092b072"],
                                   :gen nil})
                                 (jepsen.generator.OnThreads
                                  {:f #jepsen.generator.context.AllBut{:element :nemesis},
                                   :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__12077
                                                           "0x504521ae"
                                                           "jepsen.generator.context$make_thread_filter$lazy_filter__12077@504521ae"],
                                   :gen (jepsen.generator.Stagger
                                         {:dt 200000000,
                                          :next-time nil,
                                          :gen (jepsen.generator.Mix
                                                {:i 0,
                                                 :gens [({:f :broadcast,
                                                          :value 0}
                                                         {:f :broadcast,
                                                          :value 1}
                                                         {:f :broadcast,
                                                          :value 2}
                                                         {:f :broadcast,
                                                          :value 3}
                                                         {:f :broadcast,
                                                          :value 4}
                                                         {:f :broadcast,
                                                          :value 5}
                                                         {:f :broadcast,
                                                          :value 6}
                                                         {:f :broadcast,
                                                          :value 7}
                                                         ...)
                                                        ({:f :read}
                                                         {:f :read}
                                                         {:f :read}
                                                         {:f :read}
                                                         {:f :read}
                                                         {:f :read}
                                                         {:f :read}
                                                         {:f :read}
                                                         ...)]})})})]})})})
          (jepsen.generator.Synchronize
           {:gen (jepsen.generator.OnThreads
                  {:f #{:nemesis},
                   :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__12077
                                           "0x6f8af186"
                                           "jepsen.generator.context$make_thread_filter$lazy_filter__12077@6f8af186"],
                   :gen ()})})
          (jepsen.generator.Synchronize
           {:gen {:type :log, :value "Waiting for recovery..."}})
          (jepsen.generator.Synchronize {:gen {:type :sleep, :value 10}})
          (jepsen.generator.Synchronize
           {:gen (jepsen.generator.OnThreads
                  {:f #jepsen.generator.context.AllBut{:element :nemesis},
                   :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__12077
                                           "0x5aaecd25"
                                           "jepsen.generator.context$make_thread_filter$lazy_filter__12077@5aaecd25"],
                   :gen (jepsen.generator.EachThread
                         {:fresh-gen {:f :read, :final? true},
                          :context-filters #object[clojure.core$promise$reify__8621
                                                   "0x239fdf8f"
                                                   {:status :pending, :val nil}],
                          :gens {}})})}))]
 :log-net-recv false
 :os
 #object[maelstrom.net$jepsen_os$reify__15724
         "0x1acd660d"
         "maelstrom.net$jepsen_os$reify__15724@1acd660d"]
 :time-limit 20
 :workload :broadcast
 :consistency-models [:strict-serializable]
 :topology :grid}

2025-06-06 11:55:33,955{GMT}	INFO	[jepsen node n1] maelstrom.net: Starting Maelstrom network
2025-06-06 11:55:33,955{GMT}	INFO	[jepsen test runner] jepsen.db: Tearing down DB
2025-06-06 11:55:33,956{GMT}	INFO	[jepsen test runner] jepsen.db: Setting up DB
2025-06-06 11:55:33,956{GMT}	INFO	[jepsen node n2] maelstrom.db: Setting up n2
2025-06-06 11:55:33,956{GMT}	INFO	[jepsen node n3] maelstrom.db: Setting up n3
2025-06-06 11:55:33,957{GMT}	INFO	[jepsen node n4] maelstrom.db: Setting up n4
2025-06-06 11:55:33,957{GMT}	INFO	[jepsen node n5] maelstrom.db: Setting up n5
2025-06-06 11:55:33,957{GMT}	INFO	[jepsen node n3] maelstrom.process: launching self/server/_build/default/bin/main.exe []
2025-06-06 11:55:33,957{GMT}	INFO	[jepsen node n2] maelstrom.process: launching self/server/_build/default/bin/main.exe []
2025-06-06 11:55:33,957{GMT}	INFO	[jepsen node n4] maelstrom.process: launching self/server/_build/default/bin/main.exe []
2025-06-06 11:55:33,957{GMT}	INFO	[jepsen node n5] maelstrom.process: launching self/server/_build/default/bin/main.exe []
2025-06-06 11:55:33,957{GMT}	INFO	[jepsen node n1] maelstrom.service: Starting services: (lin-kv lin-tso lww-kv seq-kv)
2025-06-06 11:55:33,958{GMT}	INFO	[jepsen node n1] maelstrom.db: Setting up n1
2025-06-06 11:55:33,958{GMT}	INFO	[jepsen node n1] maelstrom.process: launching self/server/_build/default/bin/main.exe []
2025-06-06 11:55:43,768{GMT}	INFO	[jepsen test runner] jepsen.core: Relative time begins now
2025-06-06 11:55:43,822{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:broadcast	0
2025-06-06 11:55:43,827{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:broadcast	0
2025-06-06 11:55:44,001{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:read	nil
2025-06-06 11:55:44,080{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:broadcast	1
2025-06-06 11:55:44,250{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:read	nil
2025-06-06 11:55:44,346{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:read	nil
2025-06-06 11:55:44,367{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:broadcast	1
2025-06-06 11:55:44,367{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:read	["0"]
2025-06-06 11:55:44,435{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	nil
2025-06-06 11:55:44,524{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:broadcast	2
2025-06-06 11:55:44,528{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:broadcast	2
2025-06-06 11:55:44,548{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:read	nil
2025-06-06 11:55:44,551{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:read	["0" "1" "2"]
2025-06-06 11:55:44,746{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:broadcast	3
2025-06-06 11:55:44,748{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:broadcast	3
2025-06-06 11:55:44,801{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:broadcast	4
2025-06-06 11:55:44,803{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:broadcast	4
2025-06-06 11:55:44,842{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:read	nil
2025-06-06 11:55:44,889{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:broadcast	5
2025-06-06 11:55:49,372{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:fail	:read	nil	:net-timeout
2025-06-06 11:55:49,372{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:fail	:read	nil	:net-timeout
2025-06-06 11:55:49,373{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:read	nil
2025-06-06 11:55:49,439{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:fail	:read	nil	:net-timeout
2025-06-06 11:55:49,569{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:read	nil
2025-06-06 11:55:49,743{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:broadcast	6
2025-06-06 11:55:49,845{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:fail	:read	nil	:net-timeout
2025-06-06 11:55:49,846{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:read	nil
2025-06-06 11:55:49,948{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:info	:broadcast	5	:net-timeout
2025-06-06 11:55:49,949{GMT}	INFO	[jepsen worker 2] jepsen.util: 7	:invoke	:read	nil
2025-06-06 11:55:54,378{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:fail	:read	nil	:net-timeout
2025-06-06 11:55:54,378{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:read	nil
2025-06-06 11:55:54,574{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:fail	:read	nil	:net-timeout
2025-06-06 11:55:54,574{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:broadcast	7
2025-06-06 11:55:54,747{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:info	:broadcast	6	:net-timeout
2025-06-06 11:55:54,748{GMT}	INFO	[jepsen worker 0] jepsen.util: 5	:invoke	:read	nil
2025-06-06 11:55:54,850{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:fail	:read	nil	:net-timeout
2025-06-06 11:55:54,851{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:broadcast	8
2025-06-06 11:55:54,951{GMT}	INFO	[jepsen worker 2] jepsen.util: 7	:fail	:read	nil	:net-timeout
2025-06-06 11:55:54,951{GMT}	INFO	[jepsen worker 2] jepsen.util: 7	:invoke	:broadcast	9
2025-06-06 11:55:59,384{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:fail	:read	nil	:net-timeout
2025-06-06 11:55:59,384{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:broadcast	10
2025-06-06 11:55:59,575{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:info	:broadcast	7	:net-timeout
2025-06-06 11:55:59,576{GMT}	INFO	[jepsen worker 3] jepsen.util: 8	:invoke	:read	nil
2025-06-06 11:55:59,753{GMT}	INFO	[jepsen worker 0] jepsen.util: 5	:fail	:read	nil	:net-timeout
2025-06-06 11:55:59,753{GMT}	INFO	[jepsen worker 0] jepsen.util: 5	:invoke	:broadcast	11
2025-06-06 11:55:59,851{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:info	:broadcast	8	:net-timeout
2025-06-06 11:55:59,851{GMT}	INFO	[jepsen worker 4] jepsen.util: 9	:invoke	:read	nil
2025-06-06 11:55:59,951{GMT}	INFO	[jepsen worker 2] jepsen.util: 7	:info	:broadcast	9	:net-timeout
2025-06-06 11:56:00,021{GMT}	INFO	[jepsen worker 2] jepsen.util: 12	:invoke	:broadcast	12
2025-06-06 11:56:04,386{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:info	:broadcast	10	:net-timeout
2025-06-06 11:56:04,579{GMT}	INFO	[jepsen worker 3] jepsen.util: 8	:fail	:read	nil	:net-timeout
2025-06-06 11:56:04,758{GMT}	INFO	[jepsen worker 0] jepsen.util: 5	:info	:broadcast	11	:net-timeout
2025-06-06 11:56:04,851{GMT}	INFO	[jepsen worker 4] jepsen.util: 9	:fail	:read	nil	:net-timeout
2025-06-06 11:56:05,025{GMT}	INFO	[jepsen worker 2] jepsen.util: 12	:info	:broadcast	12	:net-timeout
2025-06-06 11:56:05,026{GMT}	INFO	[jepsen worker 3] jepsen.generator.interpreter: Waiting for recovery...
2025-06-06 11:56:15,038{GMT}	INFO	[jepsen worker 1] jepsen.util: 6	:invoke	:read	nil
2025-06-06 11:56:15,038{GMT}	INFO	[jepsen worker 0] jepsen.util: 10	:invoke	:read	nil
2025-06-06 11:56:15,038{GMT}	INFO	[jepsen worker 2] jepsen.util: 17	:invoke	:read	nil
2025-06-06 11:56:15,038{GMT}	INFO	[jepsen worker 4] jepsen.util: 9	:invoke	:read	nil
2025-06-06 11:56:15,038{GMT}	INFO	[jepsen worker 3] jepsen.util: 8	:invoke	:read	nil
2025-06-06 11:56:20,040{GMT}	INFO	[jepsen worker 1] jepsen.util: 6	:fail	:read	nil	:net-timeout
2025-06-06 11:56:20,040{GMT}	INFO	[jepsen worker 3] jepsen.util: 8	:fail	:read	nil	:net-timeout
2025-06-06 11:56:20,041{GMT}	INFO	[jepsen worker 2] jepsen.util: 17	:fail	:read	nil	:net-timeout
2025-06-06 11:56:20,041{GMT}	INFO	[jepsen worker 0] jepsen.util: 10	:fail	:read	nil	:net-timeout
2025-06-06 11:56:20,043{GMT}	INFO	[jepsen worker 4] jepsen.util: 9	:fail	:read	nil	:net-timeout
2025-06-06 11:56:20,086{GMT}	INFO	[jepsen test runner] jepsen.core: Run complete, writing
2025-06-06 11:56:20,145{GMT}	INFO	[jepsen node n4] maelstrom.db: Tearing down n4
2025-06-06 11:56:20,145{GMT}	INFO	[jepsen node n3] maelstrom.db: Tearing down n3
2025-06-06 11:56:20,145{GMT}	INFO	[jepsen node n2] maelstrom.db: Tearing down n2
2025-06-06 11:56:20,145{GMT}	INFO	[jepsen node n1] maelstrom.db: Tearing down n1
2025-06-06 11:56:20,145{GMT}	INFO	[jepsen node n5] maelstrom.db: Tearing down n5
2025-06-06 11:56:21,124{GMT}	INFO	[jepsen node n1] maelstrom.net: Shutting down Maelstrom network
2025-06-06 11:56:21,125{GMT}	INFO	[jepsen test runner] jepsen.core: Analyzing...
2025-06-06 11:56:21,328{GMT}	INFO	[jepsen test runner] jepsen.core: Analysis complete
2025-06-06 11:56:21,341{GMT}	INFO	[jepsen results] jepsen.store: Wrote /Users/adr/code/maelstrom/store/broadcast/20250606T115532.724-0400/results.edn
2025-06-06 11:56:21,385{GMT}	INFO	[jepsen test runner] jepsen.core: {:perf {:latency-graph {:valid? true},
        :rate-graph {:valid? true},
        :valid? true},
 :timeline {:valid? true},
 :exceptions {:valid? true},
 :stats {:valid? true,
         :count 32,
         :ok-count 7,
         :fail-count 17,
         :info-count 8,
         :by-f {:broadcast {:valid? true,
                            :count 13,
                            :ok-count 5,
                            :fail-count 0,
                            :info-count 8},
                :read {:valid? true,
                       :count 19,
                       :ok-count 2,
                       :fail-count 17,
                       :info-count 0}}},
 :availability {:valid? true, :ok-fraction 0.21875},
 :net {:all {:send-count 86,
             :recv-count 86,
             :msg-count 86,
             :msgs-per-op 2.6875},
       :clients {:send-count 59, :recv-count 59, :msg-count 59},
       :servers {:send-count 27,
                 :recv-count 27,
                 :msg-count 27,
                 :msgs-per-op 0.84375},
       :valid? true},
 :workload {:worst-stale (),
            :duplicated-count 0,
            :valid? false,
            :lost-count 3,
            :lost (0 1 2),
            :stable-count 0,
            :stale-count 0,
            :stale (),
            :never-read-count 10,
            :attempt-count 13,
            :lost-latencies {0 0, 0.5 0, 0.95 0, 0.99 0, 1 0},
            :never-read (3 4 5 6 7 8 9 10 11 12),
            :duplicated {}},
 :valid? false}


Analysis invalid! (ﾉಥ益ಥ）ﾉ ┻━┻
